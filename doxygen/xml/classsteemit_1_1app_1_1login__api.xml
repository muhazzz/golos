<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsteemit_1_1app_1_1login__api" kind="class" language="C++" prot="public">
    <compoundname>steemit::app::login_api</compoundname>
    <includes refid="api_8hpp" local="no">api.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsteemit_1_1app_1_1login__api_1a119195fa50609bf3c5b6aface5e665bf" prot="private" static="no" mutable="no">
        <type><ref refid="structsteemit_1_1app_1_1api__context" kindref="compound">api_context</ref></type>
        <definition>api_context steemit::app::login_api::_ctx</definition>
        <argsstring></argsstring>
        <name>_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/api.hpp" line="218" column="1" bodyfile="libraries/app/include/steemit/app/api.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsteemit_1_1app_1_1login__api_1af63a207c89aa247f5bb900e7e15f9749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::app::login_api::login_api</definition>
        <argsstring>(const api_context &amp;ctx)</argsstring>
        <name>login_api</name>
        <param>
          <type>const <ref refid="structsteemit_1_1app_1_1api__context" kindref="compound">api_context</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/api.hpp" line="195" column="1" bodyfile="libraries/app/api.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1login__api_1a47c924ac5d9f3568e26a5f12051eebf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>steemit::app::login_api::~login_api</definition>
        <argsstring>()</argsstring>
        <name>~login_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/api.hpp" line="197" column="1" bodyfile="libraries/app/api.cpp" bodystart="43" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1login__api_1a33d37e7881cffbb0d518f8d233432a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool steemit::app::login_api::login</definition>
        <argsstring>(const string &amp;user, const string &amp;password)</argsstring>
        <name>login</name>
        <param>
          <type>const string &amp;</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Authenticate to the RPC server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>Username to login with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>Password to login with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if logged in successfully; false otherwise</para></simplesect>
<simplesect kind="note"><para>This must be called prior to requesting other APIs. Other APIs may not be accessible until the client has sucessfully authenticated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/api.hpp" line="208" column="1" bodyfile="libraries/app/api.cpp" bodystart="49" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1login__api_1ad3ba91ac4eba18a27a1aaacbf787fb1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api_ptr</type>
        <definition>fc::api_ptr steemit::app::login_api::get_api_by_name</definition>
        <argsstring>(const string &amp;api_name) const</argsstring>
        <name>get_api_by_name</name>
        <param>
          <type>const string &amp;</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/api.hpp" line="210" column="1" bodyfile="libraries/app/api.cpp" bodystart="89" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1login__api_1a7f3a95add334d0bb2eb6d9107bf98378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsteemit_1_1app_1_1steem__version__info" kindref="compound">steem_version_info</ref></type>
        <definition>steem_version_info steemit::app::login_api::get_version</definition>
        <argsstring>()</argsstring>
        <name>get_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/api.hpp" line="212" column="1" bodyfile="libraries/app/api.cpp" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1login__api_1a19d5de2f166bbf7bcd5a3dd9a92224d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::login_api::on_api_startup</definition>
        <argsstring>()</argsstring>
        <name>on_api_startup</name>
        <briefdescription>
<para>internal method, not exposed via JSON RPC </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/api.hpp" line="215" column="1" bodyfile="libraries/app/api.cpp" bodystart="46" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classsteemit_1_1app_1_1login__api" kindref="compound">login_api</ref> class implements the bottom layer of the RPC API. </para>    </briefdescription>
    <detaileddescription>
<para>All other APIs must be requested from this API. </para>    </detaileddescription>
    <location file="libraries/app/include/steemit/app/api.hpp" line="193" column="1" bodyfile="libraries/app/include/steemit/app/api.hpp" bodystart="193" bodyend="219"/>
    <listofallmembers>
      <member refid="classsteemit_1_1app_1_1login__api_1a119195fa50609bf3c5b6aface5e665bf" prot="private" virt="non-virtual"><scope>steemit::app::login_api</scope><name>_ctx</name></member>
      <member refid="classsteemit_1_1app_1_1login__api_1ad3ba91ac4eba18a27a1aaacbf787fb1c" prot="public" virt="non-virtual"><scope>steemit::app::login_api</scope><name>get_api_by_name</name></member>
      <member refid="classsteemit_1_1app_1_1login__api_1a7f3a95add334d0bb2eb6d9107bf98378" prot="public" virt="non-virtual"><scope>steemit::app::login_api</scope><name>get_version</name></member>
      <member refid="classsteemit_1_1app_1_1login__api_1a33d37e7881cffbb0d518f8d233432a2e" prot="public" virt="non-virtual"><scope>steemit::app::login_api</scope><name>login</name></member>
      <member refid="classsteemit_1_1app_1_1login__api_1af63a207c89aa247f5bb900e7e15f9749" prot="public" virt="non-virtual"><scope>steemit::app::login_api</scope><name>login_api</name></member>
      <member refid="classsteemit_1_1app_1_1login__api_1a19d5de2f166bbf7bcd5a3dd9a92224d5" prot="public" virt="non-virtual"><scope>steemit::app::login_api</scope><name>on_api_startup</name></member>
      <member refid="classsteemit_1_1app_1_1login__api_1a47c924ac5d9f3568e26a5f12051eebf6" prot="public" virt="virtual"><scope>steemit::app::login_api</scope><name>~login_api</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
