<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacesteemit_1_1chain" kind="namespace" language="C++">
    <compoundname>steemit::chain</compoundname>
    <innerclass refid="classsteemit_1_1chain_1_1account__authority__object" prot="public">steemit::chain::account_authority_object</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1account__balances" prot="public">steemit::chain::account_balances</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1account__bandwidth__object" prot="public">steemit::chain::account_bandwidth_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1account__history__object" prot="public">steemit::chain::account_history_object</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1account__keys" prot="public">steemit::chain::account_keys</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1account__object" prot="public">steemit::chain::account_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1account__recovery__request__object" prot="public">steemit::chain::account_recovery_request_object</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1account__summary" prot="public">steemit::chain::account_summary</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1block__log" prot="public">steemit::chain::block_log</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1block__summary__object" prot="public">steemit::chain::block_summary_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1category__object" prot="public">steemit::chain::category_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" prot="public">steemit::chain::change_recovery_account_request_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1comment__object" prot="public">steemit::chain::comment_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1comment__vote__object" prot="public">steemit::chain::comment_vote_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1convert__request__object" prot="public">steemit::chain::convert_request_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1custom__operation__interpreter" prot="public">steemit::chain::custom_operation_interpreter</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1database" prot="public">steemit::chain::database</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1db__schema" prot="public">steemit::chain::db_schema</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" prot="public">steemit::chain::decline_voting_rights_request_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1dynamic__global__property__object" prot="public">steemit::chain::dynamic_global_property_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1escrow__object" prot="public">steemit::chain::escrow_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1evaluator" prot="public">steemit::chain::evaluator</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1evaluator__impl" prot="public">steemit::chain::evaluator_impl</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1evaluator__registry" prot="public">steemit::chain::evaluator_registry</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1feed__history__object" prot="public">steemit::chain::feed_history_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1fork__database" prot="public">steemit::chain::fork_database</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1fork__item" prot="public">steemit::chain::fork_item</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1generic__custom__operation__interpreter" prot="public">steemit::chain::generic_custom_operation_interpreter</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1immutable__chain__parameters" prot="public">steemit::chain::immutable_chain_parameters</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1limit__order__object" prot="public">steemit::chain::limit_order_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" prot="public">steemit::chain::liquidity_reward_balance_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1node__property__object" prot="public">steemit::chain::node_property_object</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1object__schema__repr" prot="public">steemit::chain::object_schema_repr</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1operation__notification" prot="public">steemit::chain::operation_notification</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1operation__object" prot="public">steemit::chain::operation_object</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1operation__schema__repr" prot="public">steemit::chain::operation_schema_repr</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1owner__authority__history__object" prot="public">steemit::chain::owner_authority_history_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1savings__withdraw__object" prot="public">steemit::chain::savings_withdraw_object</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1shared__authority" prot="public">steemit::chain::shared_authority</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1snapshot__state" prot="public">steemit::chain::snapshot_state</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1snapshot__summary" prot="public">steemit::chain::snapshot_summary</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1strcmp__equal" prot="public">steemit::chain::strcmp_equal</innerclass>
    <innerclass refid="structsteemit_1_1chain_1_1strcmp__less" prot="public">steemit::chain::strcmp_less</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1transaction__object" prot="public">steemit::chain::transaction_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" prot="public">steemit::chain::withdraw_vesting_route_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1witness__object" prot="public">steemit::chain::witness_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1witness__schedule__object" prot="public">steemit::chain::witness_schedule_object</innerclass>
    <innerclass refid="classsteemit_1_1chain_1_1witness__vote__object" prot="public">steemit::chain::witness_vote_object</innerclass>
    <innernamespace refid="namespacesteemit_1_1chain_1_1detail">steemit::chain::detail</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacesteemit_1_1chain_1a704d6cfb76ba6a996acf7b854a842f94" prot="public" static="no">
        <name>comment_mode</name>
        <enumvalue id="namespacesteemit_1_1chain_1a704d6cfb76ba6a996acf7b854a842f94aa3d6c4154cf95857f82e592c3e39ffe6" prot="public">
          <name>first_payout</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a704d6cfb76ba6a996acf7b854a842f94a07d94c641d4cc6a3970a38c077f114a9" prot="public">
          <name>second_payout</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a704d6cfb76ba6a996acf7b854a842f94a143f909779a35d8955424e765249674a" prot="public">
          <name>archived</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/comment_object.hpp" line="96" column="1" bodyfile="libraries/chain/include/steemit/chain/comment_object.hpp" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="enum" id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0" prot="public" static="no">
        <name>object_type</name>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a53b972a632bacfa8825751e43ac0993d" prot="public">
          <name>dynamic_global_property_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0ad567a76e4931c5213aeed4b100bd1e4f" prot="public">
          <name>account_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a9d3699600ae7b9aa63ee50ecfe2016b0" prot="public">
          <name>account_authority_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a7de25583f667b3839359ca28fae63f7e" prot="public">
          <name>account_bandwidth_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a5c43da32634338d7dda7f65e0f6368b5" prot="public">
          <name>witness_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0acfcb317dc2e20a847b05a6762bde5df2" prot="public">
          <name>transaction_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a4f4811c45a75099742203b7db3070db0" prot="public">
          <name>block_summary_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a5bb3a70ceb45cd1985f604096a022adb" prot="public">
          <name>witness_schedule_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0aab7d8c1de988313e31df0596795250ff" prot="public">
          <name>comment_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a9daa52cc814eb98802d69fdcc106ebe8" prot="public">
          <name>comment_vote_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a54404c4aabc01a8f3a2c5a55d43b1063" prot="public">
          <name>witness_vote_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0aa47f461ef66d86f1bc7273cc13a9fd2e" prot="public">
          <name>limit_order_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0adbf09f2c9d3ff119f6905ab396f96f45" prot="public">
          <name>feed_history_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a6e751e3e61cbf985d5bd6cf2c9e48c26" prot="public">
          <name>convert_request_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a4399d69a9327bda87a73b34b465f1a68" prot="public">
          <name>liquidity_reward_balance_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a0deaf5aa6787e89dd1a3db168553265c" prot="public">
          <name>operation_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0aa2f519fd725251feedc690ab001ab91e" prot="public">
          <name>account_history_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0adb630627c4508b703e38a7f57341a037" prot="public">
          <name>category_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a2823bd48e69844fdd27e319ba73d10fe" prot="public">
          <name>hardfork_property_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0aea3b9e784e4e14d1478524dc6edc8a08" prot="public">
          <name>withdraw_vesting_route_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a99b5fbe6043291a3fd33a9fe598fc47a" prot="public">
          <name>owner_authority_history_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a38d6937dc39eefcb46f4ade7cedb3715" prot="public">
          <name>account_recovery_request_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0af0395fbd57a01f7879efc4c75c8dd63e" prot="public">
          <name>change_recovery_account_request_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a2a31e95d6dee3cd6e9571b6120bede00" prot="public">
          <name>escrow_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a1d873a16bfffaaaf04d8c38e0f3b371d" prot="public">
          <name>savings_withdraw_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a1bbd8e38d36ffe3ad24ae25491f14fe8" prot="public">
          <name>decline_voting_rights_request_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1a042f672ee0d36777f90871e942b286d0a8fd6107481c9fefdf1d4728b43e94166" prot="public">
          <name>block_stats_object_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="47" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="47" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="namespacesteemit_1_1chain_1aeba90a44c75a64f6f4a003ccabfea35c" prot="public" static="no">
        <name>bandwidth_type</name>
        <enumvalue id="namespacesteemit_1_1chain_1aeba90a44c75a64f6f4a003ccabfea35caa07f9f4f2785218e4e18bce5f37a09b6" prot="public">
          <name>post</name>
          <briefdescription>
<para>Rate limiting posting reward eligibility over time. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1aeba90a44c75a64f6f4a003ccabfea35ca0148aef10c6fb08d121c2bd4f9d39601" prot="public">
          <name>forum</name>
          <briefdescription>
<para>Rate limiting for all forum related actins. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1aeba90a44c75a64f6f4a003ccabfea35ca92f516c237cd6d69558e387986e03fa3" prot="public">
          <name>market</name>
          <briefdescription>
<para>Rate limiting for all other actions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1aeba90a44c75a64f6f4a003ccabfea35ca23b4296a026ad0f43118c602365f32ee" prot="public">
          <name>old_forum</name>
          <briefdescription>
<para>Rate limiting for all forum related actions (deprecated) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesteemit_1_1chain_1aeba90a44c75a64f6f4a003ccabfea35ca81f4364ff28200adc9b5034bf076e502" prot="public">
          <name>old_market</name>
          <briefdescription>
<para>Rate limiting for all other actions (deprecated) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="159" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="159" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a8cb6b390182f2014861ea10b0d853181" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_name &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a91d529d885327e5fd39bdf1db06795db" kindref="member">account_object::name</ref> &gt;, protocol::string_less &gt;, ordered_unique&lt; tag&lt; by_proxy &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1adbd7e442843bc6ed17bc1f21a761917c" kindref="member">account_object::proxy</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_next_vesting_withdrawal &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a50713a97c79d497e6d3dc0734f98e905" kindref="member">account_object::next_vesting_withdrawal</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_last_post &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1ade8aa9b6409c7543fcd5a5559dba30ab" kindref="member">account_object::last_post</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_steem_balance &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, asset, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a5f013b0ec14974a5369fd2e9eb4e9bc1" kindref="member">account_object::balance</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; asset &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_smp_balance &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, asset, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a176de677c45deaa30becf8e7b80414a3" kindref="member">account_object::vesting_shares</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; asset &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_smd_balance &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, asset, &amp;<ref refid="group__sbd__data_1ga9b2383cd407753d59866b8289d5166ff" kindref="member">account_object::sbd_balance</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; asset &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_post_count &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1ace2fc31327b2701e40fbb4de60faf190" kindref="member">account_object::post_count</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; uint32_t &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_vote_count &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a271cd31f4ce3db163e4c78ed9d80d23d" kindref="member">account_object::lifetime_vote_count</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__object_1a0fce8c06bad7b35d39a6f63ec9ed609f" kindref="member">account_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; uint32_t &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_object, indexed_by&lt; ordered_unique&lt;tag&lt;by_id&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt;, ordered_unique&lt;tag&lt;by_name&gt;, member&lt;account_object, account_name_type, &amp;account_object::name&gt;, protocol::string_less&gt;, ordered_unique&lt;tag&lt;by_proxy&gt;, composite_key &lt; account_object, member&lt;account_object, account_name_type, &amp;account_object::proxy&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_next_vesting_withdrawal&gt;, composite_key &lt; account_object, member&lt;account_object, time_point_sec, &amp;account_object::next_vesting_withdrawal&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_last_post&gt;, composite_key &lt; account_object, member&lt;account_object, time_point_sec, &amp;account_object::last_post&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;time_point_sec&gt;, std::less&lt;account_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_steem_balance&gt;, composite_key &lt; account_object, member&lt;account_object, asset, &amp;account_object::balance&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;asset&gt;, std::less&lt;account_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_smp_balance&gt;, composite_key &lt; account_object, member&lt;account_object, asset, &amp;account_object::vesting_shares&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;asset&gt;, std::less&lt;account_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_smd_balance&gt;, composite_key &lt; account_object, member&lt;account_object, asset, &amp;account_object::sbd_balance&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;asset&gt;, std::less&lt;account_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_post_count&gt;, composite_key &lt; account_object, member&lt;account_object, uint32_t, &amp;account_object::post_count&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;uint32_t&gt;, std::less&lt;account_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_vote_count&gt;, composite_key &lt; account_object, member&lt;account_object, uint32_t, &amp;account_object::lifetime_vote_count&gt;, member&lt;account_object, account_id_type, &amp;account_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;uint32_t&gt;, std::less&lt;account_id_type&gt; &gt; &gt; &gt;, allocator&lt;account_object&gt; &gt; steemit::chain::account_index</definition>
        <argsstring></argsstring>
        <name>account_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/account_object.hpp" line="290" column="1" bodyfile="libraries/chain/include/steemit/chain/account_object.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a5b186dae7a1f333e6b43b73a96ce0349" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref>, <ref refid="namespacesteemit_1_1chain_1ac0d3d8a2d88087b3d995b34ec6fdc4c6" kindref="member">owner_authority_history_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1owner__authority__history__object_1a2b6e0fbb7e35c1a68970edb0c1242e79" kindref="member">owner_authority_history_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1owner__authority__history__object_1ae471b0ea4cd3847aa00603319f207b01" kindref="member">owner_authority_history_object::account</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1owner__authority__history__object_1a9f23d29ba555be5e515b83da872a5fa1" kindref="member">owner_authority_history_object::last_valid_time</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref>, <ref refid="namespacesteemit_1_1chain_1ac0d3d8a2d88087b3d995b34ec6fdc4c6" kindref="member">owner_authority_history_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1owner__authority__history__object_1a2b6e0fbb7e35c1a68970edb0c1242e79" kindref="member">owner_authority_history_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, std::less&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1ac0d3d8a2d88087b3d995b34ec6fdc4c6" kindref="member">owner_authority_history_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; owner_authority_history_object, indexed_by&lt; ordered_unique&lt;tag&lt;by_id&gt;, member&lt;owner_authority_history_object, owner_authority_history_id_type, &amp;owner_authority_history_object::id&gt; &gt;, ordered_unique&lt;tag&lt;by_account&gt;, composite_key &lt; owner_authority_history_object, member&lt;owner_authority_history_object, account_name_type, &amp;owner_authority_history_object::account&gt;, member&lt;owner_authority_history_object, time_point_sec, &amp;owner_authority_history_object::last_valid_time&gt;, member&lt;owner_authority_history_object, owner_authority_history_id_type, &amp;owner_authority_history_object::id&gt; &gt;, composite_key_compare &lt; std::less&lt;account_name_type&gt;, std::less&lt;time_point_sec&gt;, std::less&lt;owner_authority_history_id_type&gt; &gt; &gt; &gt;, allocator&lt;owner_authority_history_object&gt; &gt; steemit::chain::owner_authority_history_index</definition>
        <argsstring></argsstring>
        <name>owner_authority_history_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/account_object.hpp" line="312" column="1" bodyfile="libraries/chain/include/steemit/chain/account_object.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a2dccaf7163f58a960b666bc3b7e5796e" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, <ref refid="namespacesteemit_1_1chain_1a765ea007f3f1224e2fd941544a00c273" kindref="member">account_authority_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__authority__object_1a012da573e0bef7d8ac50762676917660" kindref="member">account_authority_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1account__authority__object_1ac950bf99ae8f657db31f9bed52d2a6fc" kindref="member">account_authority_object::account</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, <ref refid="namespacesteemit_1_1chain_1a765ea007f3f1224e2fd941544a00c273" kindref="member">account_authority_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__authority__object_1a012da573e0bef7d8ac50762676917660" kindref="member">account_authority_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a765ea007f3f1224e2fd941544a00c273" kindref="member">account_authority_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_last_owner_update &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1account__authority__object_1ac6055dd20f41919820efd1713f7e59fe" kindref="member">account_authority_object::last_owner_update</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref>, <ref refid="namespacesteemit_1_1chain_1a765ea007f3f1224e2fd941544a00c273" kindref="member">account_authority_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__authority__object_1a012da573e0bef7d8ac50762676917660" kindref="member">account_authority_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a765ea007f3f1224e2fd941544a00c273" kindref="member">account_authority_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_authority_object, indexed_by&lt; ordered_unique&lt;tag&lt;by_id&gt;, member&lt;account_authority_object, account_authority_id_type, &amp;account_authority_object::id&gt; &gt;, ordered_unique&lt;tag&lt;by_account&gt;, composite_key &lt; account_authority_object, member&lt;account_authority_object, account_name_type, &amp;account_authority_object::account&gt;, member&lt;account_authority_object, account_authority_id_type, &amp;account_authority_object::id&gt; &gt;, composite_key_compare &lt; std::less&lt;account_name_type&gt;, std::less&lt;account_authority_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_last_owner_update&gt;, composite_key &lt; account_authority_object, member&lt;account_authority_object, time_point_sec, &amp;account_authority_object::last_owner_update&gt;, member&lt;account_authority_object, account_authority_id_type, &amp;account_authority_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;time_point_sec&gt;, std::less&lt;account_authority_id_type&gt; &gt; &gt; &gt;, allocator&lt;account_authority_object&gt; &gt; steemit::chain::account_authority_index</definition>
        <argsstring></argsstring>
        <name>account_authority_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/account_object.hpp" line="339" column="1" bodyfile="libraries/chain/include/steemit/chain/account_object.hpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1ac650666d4b230f3109d2de840b2b450c" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1account__bandwidth__object" kindref="compound">account_bandwidth_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__bandwidth__object" kindref="compound">account_bandwidth_object</ref>, <ref refid="namespacesteemit_1_1chain_1a8f82321a0f18027acb1faedbf0a3ded1" kindref="member">account_bandwidth_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__bandwidth__object_1a11a7c2e4940b6be27aef67f0b7563d3b" kindref="member">account_bandwidth_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account_bandwidth_type &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__bandwidth__object" kindref="compound">account_bandwidth_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__bandwidth__object" kindref="compound">account_bandwidth_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1account__bandwidth__object_1a1a5a591d2ae37b03effe8c3612a3d2e8" kindref="member">account_bandwidth_object::account</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__bandwidth__object" kindref="compound">account_bandwidth_object</ref>, <ref refid="namespacesteemit_1_1chain_1aeba90a44c75a64f6f4a003ccabfea35c" kindref="member">bandwidth_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__bandwidth__object_1a351f11a240c97e14775df9d1f3f1a1c9" kindref="member">account_bandwidth_object::type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1account__bandwidth__object" kindref="compound">account_bandwidth_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_bandwidth_object, indexed_by&lt; ordered_unique&lt;tag&lt;by_id&gt;, member&lt;account_bandwidth_object, account_bandwidth_id_type, &amp;account_bandwidth_object::id&gt; &gt;, ordered_unique&lt;tag&lt;by_account_bandwidth_type&gt;, composite_key &lt; account_bandwidth_object, member&lt;account_bandwidth_object, account_name_type, &amp;account_bandwidth_object::account&gt;, member&lt;account_bandwidth_object, bandwidth_type, &amp;account_bandwidth_object::type&gt; &gt; &gt; &gt;, allocator&lt;account_bandwidth_object&gt; &gt; steemit::chain::account_bandwidth_index</definition>
        <argsstring></argsstring>
        <name>account_bandwidth_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/account_object.hpp" line="358" column="1" bodyfile="libraries/chain/include/steemit/chain/account_object.hpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a6015e9d2bde88e8b0055c6cb67bf8572" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1af921f42cea2af02b69f1e87dcfd4e207" kindref="member">account_recovery_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__recovery__request__object_1a5a8e3257246ad044a28ef00a4d6bfaf2" kindref="member">account_recovery_request_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1account__recovery__request__object_1a61add63c29bf3aa17b749e23c720afce" kindref="member">account_recovery_request_object::account_to_recover</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1af921f42cea2af02b69f1e87dcfd4e207" kindref="member">account_recovery_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__recovery__request__object_1a5a8e3257246ad044a28ef00a4d6bfaf2" kindref="member">account_recovery_request_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1af921f42cea2af02b69f1e87dcfd4e207" kindref="member">account_recovery_request_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_expiration &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1account__recovery__request__object_1a3230464ee32d14844928ba7ecca5d3c7" kindref="member">account_recovery_request_object::expires</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1af921f42cea2af02b69f1e87dcfd4e207" kindref="member">account_recovery_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__recovery__request__object_1a5a8e3257246ad044a28ef00a4d6bfaf2" kindref="member">account_recovery_request_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1af921f42cea2af02b69f1e87dcfd4e207" kindref="member">account_recovery_request_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_recovery_request_object, indexed_by&lt; ordered_unique&lt;tag&lt;by_id&gt;, member&lt;account_recovery_request_object, account_recovery_request_id_type, &amp;account_recovery_request_object::id&gt; &gt;, ordered_unique&lt;tag&lt;by_account&gt;, composite_key &lt; account_recovery_request_object, member&lt;account_recovery_request_object, account_name_type, &amp;account_recovery_request_object::account_to_recover&gt;, member&lt;account_recovery_request_object, account_recovery_request_id_type, &amp;account_recovery_request_object::id&gt; &gt;, composite_key_compare &lt; std::less&lt;account_name_type&gt;, std::less&lt;account_recovery_request_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_expiration&gt;, composite_key &lt; account_recovery_request_object, member&lt;account_recovery_request_object, time_point_sec, &amp;account_recovery_request_object::expires&gt;, member&lt;account_recovery_request_object, account_recovery_request_id_type, &amp;account_recovery_request_object::id&gt; &gt;, composite_key_compare &lt;std::less&lt;time_point_sec&gt;, std::less&lt;account_recovery_request_id_type&gt; &gt; &gt; &gt;, allocator&lt;account_recovery_request_object&gt; &gt; steemit::chain::account_recovery_request_index</definition>
        <argsstring></argsstring>
        <name>account_recovery_request_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/account_object.hpp" line="385" column="1" bodyfile="libraries/chain/include/steemit/chain/account_object.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1aa3ec1af6cfa33d894890870384b5a0cf" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1a87c3dd04e663f4fc6f91e415ac5e1c25" kindref="member">change_recovery_account_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object_1a4d7969fed5ed23163970f326f6e11d91" kindref="member">change_recovery_account_request_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object_1abb2aab40b54b28a3db0877a6380953ae" kindref="member">change_recovery_account_request_object::account_to_recover</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1a87c3dd04e663f4fc6f91e415ac5e1c25" kindref="member">change_recovery_account_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object_1a4d7969fed5ed23163970f326f6e11d91" kindref="member">change_recovery_account_request_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a87c3dd04e663f4fc6f91e415ac5e1c25" kindref="member">change_recovery_account_request_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_effective_date &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object_1af3dd727825dd8ac78464df056c885d0a" kindref="member">change_recovery_account_request_object::effective_on</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1a87c3dd04e663f4fc6f91e415ac5e1c25" kindref="member">change_recovery_account_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object_1a4d7969fed5ed23163970f326f6e11d91" kindref="member">change_recovery_account_request_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a87c3dd04e663f4fc6f91e415ac5e1c25" kindref="member">change_recovery_account_request_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; change_recovery_account_request_object, indexed_by&lt; ordered_unique&lt;tag&lt;by_id&gt;, member&lt;change_recovery_account_request_object, change_recovery_account_request_id_type, &amp;change_recovery_account_request_object::id&gt; &gt;, ordered_unique&lt;tag&lt;by_account&gt;, composite_key &lt; change_recovery_account_request_object, member&lt;change_recovery_account_request_object, account_name_type, &amp;change_recovery_account_request_object::account_to_recover&gt;, member&lt;change_recovery_account_request_object, change_recovery_account_request_id_type, &amp;change_recovery_account_request_object::id&gt; &gt;, composite_key_compare &lt; std::less&lt;account_name_type&gt;, std::less&lt;change_recovery_account_request_id_type&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_effective_date&gt;, composite_key &lt; change_recovery_account_request_object, member&lt;change_recovery_account_request_object, time_point_sec, &amp;change_recovery_account_request_object::effective_on&gt;, member&lt;change_recovery_account_request_object, change_recovery_account_request_id_type, &amp;change_recovery_account_request_object::id&gt; &gt;, composite_key_compare &lt;std::less&lt;time_point_sec&gt;, std::less&lt;change_recovery_account_request_id_type&gt; &gt; &gt; &gt;, allocator&lt;change_recovery_account_request_object&gt; &gt; steemit::chain::change_recovery_account_request_index</definition>
        <argsstring></argsstring>
        <name>change_recovery_account_request_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/account_object.hpp" line="413" column="1" bodyfile="libraries/chain/include/steemit/chain/account_object.hpp" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a4ab9c7d17ddb91cfd7bba841f0c57a47" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1block__summary__object" kindref="compound">block_summary_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1block__summary__object" kindref="compound">block_summary_object</ref>, block_summary_object::id_type, &amp;<ref refid="classsteemit_1_1chain_1_1block__summary__object_1aefa455e31bbcf4d4c6c67cc3a6661da5" kindref="member">block_summary_object::id</ref> &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1block__summary__object" kindref="compound">block_summary_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; block_summary_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;block_summary_object, block_summary_object::id_type, &amp;block_summary_object::id&gt; &gt; &gt;, allocator &lt;block_summary_object&gt; &gt; steemit::chain::block_summary_index</definition>
        <argsstring></argsstring>
        <name>block_summary_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/block_summary_object.hpp" line="42" column="1" bodyfile="libraries/chain/include/steemit/chain/block_summary_object.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1ae9a3e393f3f3d587f792eade1e9aa927" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, <ref refid="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" kindref="member">category_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1a84506b6ccd5a1f7542e257471ac117f4" kindref="member">category_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_name &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, <ref refid="namespacesteemit_1_1chain_1a8e2d955447720336a4deaae60ad49519" kindref="member">shared_string</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1aaeeb8f6b22b66962eae985fb7d46e840" kindref="member">category_object::name</ref> &gt;, <ref refid="structsteemit_1_1chain_1_1strcmp__less" kindref="compound">strcmp_less</ref> &gt;, ordered_unique&lt; tag&lt; by_rshares &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, share_type, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1a7c1115fad35d831583eb2954443ee2e8" kindref="member">category_object::abs_rshares</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, <ref refid="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" kindref="member">category_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1a84506b6ccd5a1f7542e257471ac117f4" kindref="member">category_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; share_type &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" kindref="member">category_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_total_payouts &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, asset, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1aa40530feb2eff85281fe6ec86d658e59" kindref="member">category_object::total_payouts</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, <ref refid="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" kindref="member">category_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1a84506b6ccd5a1f7542e257471ac117f4" kindref="member">category_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; asset &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" kindref="member">category_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_last_update &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1a6aad433a6568349acb99e7b9ed04aa14" kindref="member">category_object::last_update</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref>, <ref refid="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" kindref="member">category_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1category__object_1a84506b6ccd5a1f7542e257471ac117f4" kindref="member">category_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" kindref="member">category_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; category_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;category_object, category_id_type, &amp;category_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_name&gt;, member&lt;category_object, shared_string, &amp;category_object::name&gt;, strcmp_less&gt;, ordered_unique &lt;tag&lt;by_rshares&gt;, composite_key&lt;category_object, member &lt; category_object, share_type, &amp;category_object::abs_rshares&gt;, member&lt;category_object, category_id_type, &amp;category_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;share_type&gt;, std::less&lt;category_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_total_payouts&gt;, composite_key&lt;category_object, member &lt; category_object, asset, &amp;category_object::total_payouts&gt;, member&lt;category_object, category_id_type, &amp;category_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;asset&gt;, std::less&lt;category_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_last_update&gt;, composite_key&lt;category_object, member &lt; category_object, time_point_sec, &amp;category_object::last_update&gt;, member&lt;category_object, category_id_type, &amp;category_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;time_point_sec&gt;, std::less&lt;category_id_type&gt; &gt; &gt; &gt;, allocator &lt;category_object&gt; &gt; steemit::chain::category_index</definition>
        <argsstring></argsstring>
        <name>category_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/comment_object.hpp" line="94" column="1" bodyfile="libraries/chain/include/steemit/chain/comment_object.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a653a4c567c45c6db09907bb2057f3444" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1a00b01cbecf47288e239963294d9e2842" kindref="member">comment_vote_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a5ece8ed11c1ba7cfa4417f245c678fb0" kindref="member">comment_vote_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_comment_voter &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a5eb3c38857681785a5f423fc32da7ccb" kindref="member">comment_vote_object::comment</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a2e17460caed23c0fe716fe904b041561" kindref="member">comment_vote_object::voter</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_voter_comment &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a2e17460caed23c0fe716fe904b041561" kindref="member">comment_vote_object::voter</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a5eb3c38857681785a5f423fc32da7ccb" kindref="member">comment_vote_object::comment</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_voter_last_update &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a2e17460caed23c0fe716fe904b041561" kindref="member">comment_vote_object::voter</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a8ff2d1df81ebb883b99b7fda7ccda15d" kindref="member">comment_vote_object::last_update</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a5eb3c38857681785a5f423fc32da7ccb" kindref="member">comment_vote_object::comment</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt;, std::greater&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_comment_weight_voter &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a5eb3c38857681785a5f423fc32da7ccb" kindref="member">comment_vote_object::comment</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, uint64_t, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a9cbf139b5280cabf511356b533fdf3ff" kindref="member">comment_vote_object::weight</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__vote__object_1a2e17460caed23c0fe716fe904b041561" kindref="member">comment_vote_object::voter</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref> &gt;, std::greater&lt; uint64_t &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; comment_vote_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;comment_vote_object, comment_vote_id_type, &amp;comment_vote_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_comment_voter&gt;, composite_key&lt;comment_vote_object, member &lt; comment_vote_object, comment_id_type, &amp;comment_vote_object::comment&gt;, member&lt;comment_vote_object, account_id_type, &amp;comment_vote_object::voter&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_voter_comment&gt;, composite_key&lt;comment_vote_object, member &lt; comment_vote_object, account_id_type, &amp;comment_vote_object::voter&gt;, member&lt;comment_vote_object, comment_id_type, &amp;comment_vote_object::comment&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_voter_last_update&gt;, composite_key&lt;comment_vote_object, member &lt; comment_vote_object, account_id_type, &amp;comment_vote_object::voter&gt;, member&lt;comment_vote_object, time_point_sec, &amp;comment_vote_object::last_update&gt;, member&lt;comment_vote_object, comment_id_type, &amp;comment_vote_object::comment&gt; &gt;, composite_key_compare &lt;std::less&lt;account_id_type&gt;, std::greater&lt;time_point_sec&gt;, std::less&lt;comment_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_comment_weight_voter&gt;, composite_key&lt;comment_vote_object, member &lt; comment_vote_object, comment_id_type, &amp;comment_vote_object::comment&gt;, member&lt;comment_vote_object, uint64_t, &amp;comment_vote_object::weight&gt;, member&lt;comment_vote_object, account_id_type, &amp;comment_vote_object::voter&gt; &gt;, composite_key_compare &lt;std::less&lt;comment_id_type&gt;, std::greater&lt;uint64_t&gt;, std::less&lt;account_id_type&gt; &gt; &gt; &gt;, allocator &lt;comment_vote_object&gt; &gt; steemit::chain::comment_vote_index</definition>
        <argsstring></argsstring>
        <name>comment_vote_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/comment_object.hpp" line="240" column="1" bodyfile="libraries/chain/include/steemit/chain/comment_object.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a95037452ea467c3e6ba28ab26a633917" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a5d2d388e648de22194b5f63175309914" kindref="member">comment_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_cashout_time &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a45da480e8c5464b6e08ca616f6fb2f75" kindref="member">comment_object::cashout_time</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a5d2d388e648de22194b5f63175309914" kindref="member">comment_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_permlink &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1ace63e4f56c3c74a3ffe1e31930f5f5d8" kindref="member">comment_object::author</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a8e2d955447720336a4deaae60ad49519" kindref="member">shared_string</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1ac742ff73503071269795a0da91c5162c" kindref="member">comment_object::permlink</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, <ref refid="structsteemit_1_1chain_1_1strcmp__less" kindref="compound">strcmp_less</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_root &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a2069b5661148576354fc09b65b9ed669" kindref="member">comment_object::root_comment</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a5d2d388e648de22194b5f63175309914" kindref="member">comment_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_parent &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1aa7e2711153e2430d7a02c10f3ea37a7d" kindref="member">comment_object::parent_author</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a8e2d955447720336a4deaae60ad49519" kindref="member">shared_string</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a46dc9a9654dc5fc2f6d5568ace3c4951" kindref="member">comment_object::parent_permlink</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a5d2d388e648de22194b5f63175309914" kindref="member">comment_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, <ref refid="structsteemit_1_1chain_1_1strcmp__less" kindref="compound">strcmp_less</ref>, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_last_update &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1aa7e2711153e2430d7a02c10f3ea37a7d" kindref="member">comment_object::parent_author</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1acbb5f710f8ab5e492e87185a7584e0a1" kindref="member">comment_object::last_update</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a5d2d388e648de22194b5f63175309914" kindref="member">comment_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, std::greater&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_author_last_update &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1ace63e4f56c3c74a3ffe1e31930f5f5d8" kindref="member">comment_object::author</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1acbb5f710f8ab5e492e87185a7584e0a1" kindref="member">comment_object::last_update</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref>, <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1comment__object_1a5d2d388e648de22194b5f63175309914" kindref="member">comment_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, std::greater&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" kindref="member">comment_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; comment_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;comment_object, comment_id_type, &amp;comment_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_cashout_time&gt;, composite_key&lt;comment_object, member &lt; comment_object, time_point_sec, &amp;comment_object::cashout_time&gt;, member&lt;comment_object, comment_id_type, &amp;comment_object::id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_permlink&gt;, composite_key&lt;comment_object, member &lt; comment_object, account_name_type, &amp;comment_object::author&gt;, member&lt;comment_object, shared_string, &amp;comment_object::permlink&gt; &gt;, composite_key_compare &lt;std::less&lt;account_name_type&gt;, strcmp_less&gt; &gt;, ordered_unique &lt;tag&lt;by_root&gt;, composite_key&lt;comment_object, member &lt; comment_object, comment_id_type, &amp;comment_object::root_comment&gt;, member&lt;comment_object, comment_id_type, &amp;comment_object::id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_parent&gt;, composite_key&lt;comment_object, member &lt; comment_object, account_name_type, &amp;comment_object::parent_author&gt;, member&lt;comment_object, shared_string, &amp;comment_object::parent_permlink&gt;, member&lt;comment_object, comment_id_type, &amp;comment_object::id&gt; &gt;, composite_key_compare &lt;std::less&lt;account_name_type&gt;, strcmp_less, std::less&lt;comment_id_type&gt; &gt; &gt; , ordered_unique &lt;tag&lt;by_last_update&gt;, composite_key&lt;comment_object, member &lt; comment_object, account_name_type, &amp;comment_object::parent_author&gt;, member&lt;comment_object, time_point_sec, &amp;comment_object::last_update&gt;, member&lt;comment_object, comment_id_type, &amp;comment_object::id&gt; &gt;, composite_key_compare &lt;std::less&lt;account_name_type&gt;, std::greater&lt;time_point_sec&gt;, std::less&lt;comment_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_author_last_update&gt;, composite_key&lt;comment_object, member &lt; comment_object, account_name_type, &amp;comment_object::author&gt;, member&lt;comment_object, time_point_sec, &amp;comment_object::last_update&gt;, member&lt;comment_object, comment_id_type, &amp;comment_object::id&gt; &gt;, composite_key_compare &lt;std::less&lt;account_name_type&gt;, std::greater&lt;time_point_sec&gt;, std::less&lt;comment_id_type&gt; &gt; &gt; &gt;, allocator &lt;comment_object&gt; &gt; steemit::chain::comment_index</definition>
        <argsstring></argsstring>
        <name>comment_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/comment_object.hpp" line="323" column="1" bodyfile="libraries/chain/include/steemit/chain/comment_object.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a2e8fdf0812bc34e53874d3c27a688147" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="structsteemit_1_1chain_1_1fork__item" kindref="compound">fork_item</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;fork_item&gt; steemit::chain::item_ptr</definition>
        <argsstring></argsstring>
        <name>item_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/fork_database.hpp" line="40" column="1" bodyfile="libraries/chain/include/steemit/chain/fork_database.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a16bc3b79ec701f81ee2d27ec3cf9e6ec" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1dynamic__global__property__object" kindref="compound">dynamic_global_property_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1dynamic__global__property__object" kindref="compound">dynamic_global_property_object</ref>, dynamic_global_property_object::id_type, &amp;<ref refid="classsteemit_1_1chain_1_1dynamic__global__property__object_1af786635f2bbd127672565cf44a501690" kindref="member">dynamic_global_property_object::id</ref> &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1dynamic__global__property__object" kindref="compound">dynamic_global_property_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; dynamic_global_property_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;dynamic_global_property_object, dynamic_global_property_object::id_type, &amp;dynamic_global_property_object::id&gt; &gt; &gt;, allocator &lt;dynamic_global_property_object&gt; &gt; steemit::chain::dynamic_global_property_index</definition>
        <argsstring></argsstring>
        <name>dynamic_global_property_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/global_property_object.hpp" line="150" column="1" bodyfile="libraries/chain/include/steemit/chain/global_property_object.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a37f4a53dfc02ed7c58a95f37b59772cf" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, <ref refid="namespacesteemit_1_1chain_1a008ef9a4afc460ce6f00fc7bf266131d" kindref="member">operation_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1a1e4eca7d837fa1e378f763c5df426c2c" kindref="member">operation_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_location &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1a0345bc38e2c3ddfa321923c2404eeae4" kindref="member">operation_object::block</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1ab70d9e3ea0c0761fb7132750ec858726" kindref="member">operation_object::trx_in_block</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, uint16_t, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1a36760cb513e8819b2108f60fd87c025e" kindref="member">operation_object::op_in_trx</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, uint64_t, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1af23cc91d97f4e7d21830ca570f827cf2" kindref="member">operation_object::virtual_op</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, <ref refid="namespacesteemit_1_1chain_1a008ef9a4afc460ce6f00fc7bf266131d" kindref="member">operation_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1a1e4eca7d837fa1e378f763c5df426c2c" kindref="member">operation_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_transaction_id &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, transaction_id_type, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1a042cdc23daff92299ceff63a34a13d2a" kindref="member">operation_object::trx_id</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref>, <ref refid="namespacesteemit_1_1chain_1a008ef9a4afc460ce6f00fc7bf266131d" kindref="member">operation_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1operation__object_1a1e4eca7d837fa1e378f763c5df426c2c" kindref="member">operation_object::id</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; operation_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;operation_object, operation_id_type, &amp;operation_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_location&gt;, composite_key&lt;operation_object, member &lt; operation_object, uint32_t, &amp;operation_object::block&gt;, member&lt;operation_object, uint32_t, &amp;operation_object::trx_in_block&gt;, member&lt;operation_object, uint16_t, &amp;operation_object::op_in_trx&gt;, member&lt;operation_object, uint64_t, &amp;operation_object::virtual_op&gt;, member&lt;operation_object, operation_id_type, &amp;operation_object::id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_transaction_id&gt;, composite_key&lt;operation_object, member &lt; operation_object, transaction_id_type, &amp;operation_object::trx_id&gt;, member&lt;operation_object, operation_id_type, &amp;operation_object::id&gt; &gt; &gt; &gt;, allocator &lt;operation_object&gt; &gt; steemit::chain::operation_index</definition>
        <argsstring></argsstring>
        <name>operation_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/history_object.hpp" line="64" column="1" bodyfile="libraries/chain/include/steemit/chain/history_object.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a17d123fcbec56e6552a645f3f002cda4" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, <ref refid="namespacesteemit_1_1chain_1a096889d22dc01a636eb4f41276ee8658" kindref="member">account_history_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1account__history__object_1a88c9c2073c3e364b1c7febc601fae3ed" kindref="member">account_history_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1account__history__object_1a521f460c6d2fd6b80ac3ff971ad7b91e" kindref="member">account_history_object::account</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1account__history__object_1a996e37fb2dff68e98a4ef39369d6cc4a" kindref="member">account_history_object::sequence</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_name_type &gt;, std::greater&lt; uint32_t &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_history_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;account_history_object, account_history_id_type, &amp;account_history_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_account&gt;, composite_key&lt;account_history_object, member &lt; account_history_object, account_name_type, &amp;account_history_object::account&gt;, member&lt;account_history_object, uint32_t, &amp;account_history_object::sequence&gt; &gt;, composite_key_compare &lt;std::less&lt;account_name_type&gt;, std::greater&lt;uint32_t&gt; &gt; &gt; &gt;, allocator &lt;account_history_object&gt; &gt; steemit::chain::account_history_index</definition>
        <argsstring></argsstring>
        <name>account_history_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/history_object.hpp" line="98" column="1" bodyfile="libraries/chain/include/steemit/chain/history_object.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a8e2d955447720336a4deaae60ad49519" prot="public" static="no">
        <type>bip::basic_string&lt; char, std::char_traits&lt; char &gt;, allocator&lt; char &gt; &gt;</type>
        <definition>typedef bip::basic_string&lt;char, std::char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; steemit::chain::shared_string</definition>
        <argsstring></argsstring>
        <name>shared_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="33" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a0ac17e44e1f49cfe6b3d2b0aee69a116" prot="public" static="no">
        <type>bip::vector&lt; char, allocator&lt; char &gt; &gt;</type>
        <definition>typedef bip::vector&lt;char, allocator&lt;char&gt; &gt; steemit::chain::buffer_type</definition>
        <argsstring></argsstring>
        <name>buffer_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="43" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a91a2a65856b34a5bc2a6683cb950e710" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1dynamic__global__property__object" kindref="compound">dynamic_global_property_object</ref> &gt;</type>
        <definition>typedef oid&lt;dynamic_global_property_object&gt; steemit::chain::dynamic_global_property_id_type</definition>
        <argsstring></argsstring>
        <name>dynamic_global_property_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="131" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref> &gt;</type>
        <definition>typedef oid&lt;account_object&gt; steemit::chain::account_id_type</definition>
        <argsstring></argsstring>
        <name>account_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="132" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a765ea007f3f1224e2fd941544a00c273" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1account__authority__object" kindref="compound">account_authority_object</ref> &gt;</type>
        <definition>typedef oid&lt;account_authority_object&gt; steemit::chain::account_authority_id_type</definition>
        <argsstring></argsstring>
        <name>account_authority_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="133" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a8f82321a0f18027acb1faedbf0a3ded1" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1account__bandwidth__object" kindref="compound">account_bandwidth_object</ref> &gt;</type>
        <definition>typedef oid&lt;account_bandwidth_object&gt; steemit::chain::account_bandwidth_id_type</definition>
        <argsstring></argsstring>
        <name>account_bandwidth_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="134" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1aa0f93539a0ca722847f4c0aac79bd9a6" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref> &gt;</type>
        <definition>typedef oid&lt;witness_object&gt; steemit::chain::witness_id_type</definition>
        <argsstring></argsstring>
        <name>witness_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="135" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a2536f2a3b63481337e970ffb7d31fa96" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1transaction__object" kindref="compound">transaction_object</ref> &gt;</type>
        <definition>typedef oid&lt;transaction_object&gt; steemit::chain::transaction_object_id_type</definition>
        <argsstring></argsstring>
        <name>transaction_object_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="136" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a9653d31116a00e6cc27162b3ac3dcacd" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1block__summary__object" kindref="compound">block_summary_object</ref> &gt;</type>
        <definition>typedef oid&lt;block_summary_object&gt; steemit::chain::block_summary_id_type</definition>
        <argsstring></argsstring>
        <name>block_summary_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="137" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a97478cbfa8baa7abb6ef2de32c9f2dd1" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1witness__schedule__object" kindref="compound">witness_schedule_object</ref> &gt;</type>
        <definition>typedef oid&lt;witness_schedule_object&gt; steemit::chain::witness_schedule_id_type</definition>
        <argsstring></argsstring>
        <name>witness_schedule_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="138" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a921bc34de0596b839b8cdd2ee11b255f" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &gt;</type>
        <definition>typedef oid&lt;comment_object&gt; steemit::chain::comment_id_type</definition>
        <argsstring></argsstring>
        <name>comment_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="139" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a00b01cbecf47288e239963294d9e2842" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1comment__vote__object" kindref="compound">comment_vote_object</ref> &gt;</type>
        <definition>typedef oid&lt;comment_vote_object&gt; steemit::chain::comment_vote_id_type</definition>
        <argsstring></argsstring>
        <name>comment_vote_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="140" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a34015289e0526d2e26c1ae3a2c93769f" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref> &gt;</type>
        <definition>typedef oid&lt;witness_vote_object&gt; steemit::chain::witness_vote_id_type</definition>
        <argsstring></argsstring>
        <name>witness_vote_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="141" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a595e311e8ae5962832c4102e2603a6b7" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref> &gt;</type>
        <definition>typedef oid&lt;limit_order_object&gt; steemit::chain::limit_order_id_type</definition>
        <argsstring></argsstring>
        <name>limit_order_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="142" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a00482a6f08dac59bf12b0c8668038014" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1feed__history__object" kindref="compound">feed_history_object</ref> &gt;</type>
        <definition>typedef oid&lt;feed_history_object&gt; steemit::chain::feed_history_id_type</definition>
        <argsstring></argsstring>
        <name>feed_history_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="143" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a84e733c98c4ba15d118640109f496b38" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref> &gt;</type>
        <definition>typedef oid&lt;convert_request_object&gt; steemit::chain::convert_request_id_type</definition>
        <argsstring></argsstring>
        <name>convert_request_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="144" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a6d58b945000695f2f8b3d56a87f858af" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref> &gt;</type>
        <definition>typedef oid&lt;liquidity_reward_balance_object&gt; steemit::chain::liquidity_reward_balance_id_type</definition>
        <argsstring></argsstring>
        <name>liquidity_reward_balance_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="145" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a008ef9a4afc460ce6f00fc7bf266131d" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1operation__object" kindref="compound">operation_object</ref> &gt;</type>
        <definition>typedef oid&lt;operation_object&gt; steemit::chain::operation_id_type</definition>
        <argsstring></argsstring>
        <name>operation_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="146" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a096889d22dc01a636eb4f41276ee8658" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref> &gt;</type>
        <definition>typedef oid&lt;account_history_object&gt; steemit::chain::account_history_id_type</definition>
        <argsstring></argsstring>
        <name>account_history_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="147" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a7d51c2eaa2aad0dcde1814ebe71cf5bd" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1category__object" kindref="compound">category_object</ref> &gt;</type>
        <definition>typedef oid&lt;category_object&gt; steemit::chain::category_id_type</definition>
        <argsstring></argsstring>
        <name>category_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="148" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1ad64e10f7e87864f56027e0664303a819" prot="public" static="no">
        <type>oid&lt; hardfork_property_object &gt;</type>
        <definition>typedef oid&lt;hardfork_property_object&gt; steemit::chain::hardfork_property_id_type</definition>
        <argsstring></argsstring>
        <name>hardfork_property_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="149" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a568e1c920b6b4d2f35660f16e7c159f2" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref> &gt;</type>
        <definition>typedef oid&lt;withdraw_vesting_route_object&gt; steemit::chain::withdraw_vesting_route_id_type</definition>
        <argsstring></argsstring>
        <name>withdraw_vesting_route_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="150" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1ac0d3d8a2d88087b3d995b34ec6fdc4c6" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1owner__authority__history__object" kindref="compound">owner_authority_history_object</ref> &gt;</type>
        <definition>typedef oid&lt;owner_authority_history_object&gt; steemit::chain::owner_authority_history_id_type</definition>
        <argsstring></argsstring>
        <name>owner_authority_history_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="151" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1af921f42cea2af02b69f1e87dcfd4e207" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1account__recovery__request__object" kindref="compound">account_recovery_request_object</ref> &gt;</type>
        <definition>typedef oid&lt;account_recovery_request_object&gt; steemit::chain::account_recovery_request_id_type</definition>
        <argsstring></argsstring>
        <name>account_recovery_request_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="152" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a87c3dd04e663f4fc6f91e415ac5e1c25" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1change__recovery__account__request__object" kindref="compound">change_recovery_account_request_object</ref> &gt;</type>
        <definition>typedef oid&lt;change_recovery_account_request_object&gt; steemit::chain::change_recovery_account_request_id_type</definition>
        <argsstring></argsstring>
        <name>change_recovery_account_request_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="153" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref> &gt;</type>
        <definition>typedef oid&lt;escrow_object&gt; steemit::chain::escrow_id_type</definition>
        <argsstring></argsstring>
        <name>escrow_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="154" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a7490b7b7a75d8b64e4f2979de14ed9b6" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref> &gt;</type>
        <definition>typedef oid&lt;savings_withdraw_object&gt; steemit::chain::savings_withdraw_id_type</definition>
        <argsstring></argsstring>
        <name>savings_withdraw_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="155" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a6a86599ec7031c6e5028850a8d9bda4b" prot="public" static="no">
        <type>oid&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref> &gt;</type>
        <definition>typedef oid&lt;decline_voting_rights_request_object&gt; steemit::chain::decline_voting_rights_request_id_type</definition>
        <argsstring></argsstring>
        <name>decline_voting_rights_request_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="156" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a02db3953fccefdc739ebb13aa12d55a9" prot="public" static="no">
        <type>oid&lt; block_stats_object &gt;</type>
        <definition>typedef oid&lt;block_stats_object&gt; steemit::chain::block_stats_id_type</definition>
        <argsstring></argsstring>
        <name>block_stats_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="157" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a68542de788a15ec7313c7405df4f4d8f" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, <ref refid="namespacesteemit_1_1chain_1a595e311e8ae5962832c4102e2603a6b7" kindref="member">limit_order_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1limit__order__object_1aaa709c34f427089155116af4c95fbd02" kindref="member">limit_order_object::id</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_expiration &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1limit__order__object_1a5f6fdcb2fb0088bde92a6a5d07b0a1cd" kindref="member">limit_order_object::expiration</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_price &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, price, &amp;<ref refid="classsteemit_1_1chain_1_1limit__order__object_1aab9fc5dcaf62c1c82b1624fc4f7c96d8" kindref="member">limit_order_object::sell_price</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, <ref refid="namespacesteemit_1_1chain_1a595e311e8ae5962832c4102e2603a6b7" kindref="member">limit_order_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1limit__order__object_1aaa709c34f427089155116af4c95fbd02" kindref="member">limit_order_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; price &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a595e311e8ae5962832c4102e2603a6b7" kindref="member">limit_order_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1limit__order__object_1a4054c728ac720c53f659c2d592b96414" kindref="member">limit_order_object::seller</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1limit__order__object_1a11a1b400e2f0db3967ba2c0ca970baa4" kindref="member">limit_order_object::orderid</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; limit_order_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;limit_order_object, limit_order_id_type, &amp;limit_order_object::id&gt; &gt;, ordered_non_unique &lt;tag&lt;by_expiration&gt;, member&lt;limit_order_object, time_point_sec, &amp;limit_order_object::expiration&gt; &gt;, ordered_unique &lt;tag&lt;by_price&gt;, composite_key&lt;limit_order_object, member &lt; limit_order_object, price, &amp;limit_order_object::sell_price&gt;, member&lt;limit_order_object, limit_order_id_type, &amp;limit_order_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;price&gt;, std::less&lt;limit_order_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_account&gt;, composite_key&lt;limit_order_object, member &lt; limit_order_object, account_name_type, &amp;limit_order_object::seller&gt;, member&lt;limit_order_object, uint32_t, &amp;limit_order_object::orderid&gt; &gt; &gt; &gt;, allocator &lt;limit_order_object&gt; &gt; steemit::chain::limit_order_index</definition>
        <argsstring></argsstring>
        <name>limit_order_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="278" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1abc6e3db9e29d84b11be635ddf0a11b07" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1a84e733c98c4ba15d118640109f496b38" kindref="member">convert_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1convert__request__object_1a6b1b66126cf8829facda33306a73a1d8" kindref="member">convert_request_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_conversion_date &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1convert__request__object_1a4151caea3ed3bf796469e04aa80d114b" kindref="member">convert_request_object::conversion_date</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1a84e733c98c4ba15d118640109f496b38" kindref="member">convert_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1convert__request__object_1a6b1b66126cf8829facda33306a73a1d8" kindref="member">convert_request_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_owner &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1convert__request__object_1a389500ee874d4ca16833e188d2e4f80a" kindref="member">convert_request_object::owner</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1convert__request__object_1aaab98a126ff5d4a7b9dd43258b085b67" kindref="member">convert_request_object::requestid</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1convert__request__object" kindref="compound">convert_request_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; convert_request_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;convert_request_object, convert_request_id_type, &amp;convert_request_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_conversion_date&gt;, composite_key&lt;convert_request_object, member &lt; convert_request_object, time_point_sec, &amp;convert_request_object::conversion_date&gt;, member&lt;convert_request_object, convert_request_id_type, &amp;convert_request_object::id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_owner&gt;, composite_key&lt;convert_request_object, member &lt; convert_request_object, account_name_type, &amp;convert_request_object::owner&gt;, member&lt;convert_request_object, uint32_t, &amp;convert_request_object::requestid&gt; &gt; &gt; &gt;, allocator &lt;convert_request_object&gt; &gt; steemit::chain::convert_request_index</definition>
        <argsstring></argsstring>
        <name>convert_request_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="304" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a79502c12a132a8ed5581cbf5caa041de" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref>, <ref refid="namespacesteemit_1_1chain_1a6d58b945000695f2f8b3d56a87f858af" kindref="member">liquidity_reward_balance_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object_1a8c8df7cb0cc18f019c116400861d9762" kindref="member">liquidity_reward_balance_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_owner &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object_1aea81d71152541699b8fff2b337b228f1" kindref="member">liquidity_reward_balance_object::owner</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_volume_weight &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref>, fc::uint128, &amp;<ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object_1a92febe7c173837dd8f82ad7623bd9fc4" kindref="member">liquidity_reward_balance_object::weight</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object_1aea81d71152541699b8fff2b337b228f1" kindref="member">liquidity_reward_balance_object::owner</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; fc::uint128 &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1liquidity__reward__balance__object" kindref="compound">liquidity_reward_balance_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; liquidity_reward_balance_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;liquidity_reward_balance_object, liquidity_reward_balance_id_type, &amp;liquidity_reward_balance_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_owner&gt;, member&lt;liquidity_reward_balance_object, account_id_type, &amp;liquidity_reward_balance_object::owner&gt; &gt;, ordered_unique &lt;tag&lt;by_volume_weight&gt;, composite_key&lt;liquidity_reward_balance_object, member &lt; liquidity_reward_balance_object, fc::uint128, &amp;liquidity_reward_balance_object::weight&gt;, member&lt;liquidity_reward_balance_object, account_id_type, &amp;liquidity_reward_balance_object::owner&gt; &gt;, composite_key_compare &lt;std::greater&lt;fc::uint128&gt;, std::less&lt;account_id_type&gt; &gt; &gt; &gt;, allocator &lt;liquidity_reward_balance_object&gt; &gt; steemit::chain::liquidity_reward_balance_index</definition>
        <argsstring></argsstring>
        <name>liquidity_reward_balance_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="326" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a5e9de6732dc135e26b23d2d700e0a5d0" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1feed__history__object" kindref="compound">feed_history_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1feed__history__object" kindref="compound">feed_history_object</ref>, <ref refid="namespacesteemit_1_1chain_1a00482a6f08dac59bf12b0c8668038014" kindref="member">feed_history_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1feed__history__object_1a16ccea3d9851f905cd2309be20d90c63" kindref="member">feed_history_object::id</ref> &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1feed__history__object" kindref="compound">feed_history_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; feed_history_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;feed_history_object, feed_history_id_type, &amp;feed_history_object::id&gt; &gt; &gt;, allocator &lt;feed_history_object&gt; &gt; steemit::chain::feed_history_index</definition>
        <argsstring></argsstring>
        <name>feed_history_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="336" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a3839b08f5fad0f8c6fd126e46250bc41" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, <ref refid="namespacesteemit_1_1chain_1a568e1c920b6b4d2f35660f16e7c159f2" kindref="member">withdraw_vesting_route_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object_1a48596617a906e398e34da6269c041935" kindref="member">withdraw_vesting_route_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_withdraw_route &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object_1a93c647ab89e17198bdc1a8f5ce1f090f" kindref="member">withdraw_vesting_route_object::from_account</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object_1af0edf25e5f6e54200f283bf89356a8a8" kindref="member">withdraw_vesting_route_object::to_account</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_destination &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object_1af0edf25e5f6e54200f283bf89356a8a8" kindref="member">withdraw_vesting_route_object::to_account</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref>, <ref refid="namespacesteemit_1_1chain_1a568e1c920b6b4d2f35660f16e7c159f2" kindref="member">withdraw_vesting_route_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object_1a48596617a906e398e34da6269c041935" kindref="member">withdraw_vesting_route_object::id</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1withdraw__vesting__route__object" kindref="compound">withdraw_vesting_route_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; withdraw_vesting_route_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;withdraw_vesting_route_object, withdraw_vesting_route_id_type, &amp;withdraw_vesting_route_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_withdraw_route&gt;, composite_key&lt;withdraw_vesting_route_object, member &lt; withdraw_vesting_route_object, account_id_type, &amp;withdraw_vesting_route_object::from_account&gt;, member&lt;withdraw_vesting_route_object, account_id_type, &amp;withdraw_vesting_route_object::to_account&gt; &gt;, composite_key_compare &lt;std::less&lt;account_id_type&gt;, std::less&lt;account_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_destination&gt;, composite_key&lt;withdraw_vesting_route_object, member &lt; withdraw_vesting_route_object, account_id_type, &amp;withdraw_vesting_route_object::to_account&gt;, member&lt;withdraw_vesting_route_object, withdraw_vesting_route_id_type, &amp;withdraw_vesting_route_object::id&gt; &gt; &gt; &gt;, allocator &lt;withdraw_vesting_route_object&gt; &gt; steemit::chain::withdraw_vesting_route_index</definition>
        <argsstring></argsstring>
        <name>withdraw_vesting_route_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="363" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a2fd34bfb3ab3cdf5bde987a0139e7157" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, <ref refid="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" kindref="member">escrow_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a27a324aceaa522a86099ee843e3b45b5" kindref="member">escrow_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_from_id &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a087d85a5d64f92e64941efbd714b0ca5" kindref="member">escrow_object::from</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a99d3f88e3ab1162e695b7a3e2231c7ca" kindref="member">escrow_object::escrow_id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_to &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a539652002d8f47e087eecacbad90d184" kindref="member">escrow_object::to</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, <ref refid="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" kindref="member">escrow_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a27a324aceaa522a86099ee843e3b45b5" kindref="member">escrow_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_agent &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a8b7a5133e341f99cc87fc44b386a585a" kindref="member">escrow_object::agent</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, <ref refid="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" kindref="member">escrow_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a27a324aceaa522a86099ee843e3b45b5" kindref="member">escrow_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_ratification_deadline &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, const_mem_fun&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, bool, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a06a3b482d563f9d502b4e2e6d14bef4e" kindref="member">escrow_object::is_approved</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1aa1fa7249bf55581813dcf0928088b123" kindref="member">escrow_object::ratification_deadline</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, <ref refid="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" kindref="member">escrow_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a27a324aceaa522a86099ee843e3b45b5" kindref="member">escrow_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; bool &gt;, std::less&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" kindref="member">escrow_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_sbd_balance &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, asset, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a3262e30628cbb85434fd37559316b7e8" kindref="member">escrow_object::sbd_balance</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref>, <ref refid="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" kindref="member">escrow_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1escrow__object_1a27a324aceaa522a86099ee843e3b45b5" kindref="member">escrow_object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; asset &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1a1445abe149a37b565d923f111fd389b2" kindref="member">escrow_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1escrow__object" kindref="compound">escrow_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; escrow_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;escrow_object, escrow_id_type, &amp;escrow_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_from_id&gt;, composite_key&lt;escrow_object, member &lt; escrow_object, account_name_type, &amp;escrow_object::from&gt;, member&lt;escrow_object, uint32_t, &amp;escrow_object::escrow_id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_to&gt;, composite_key&lt;escrow_object, member &lt; escrow_object, account_name_type, &amp;escrow_object::to&gt;, member&lt;escrow_object, escrow_id_type, &amp;escrow_object::id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_agent&gt;, composite_key&lt;escrow_object, member &lt; escrow_object, account_name_type, &amp;escrow_object::agent&gt;, member&lt;escrow_object, escrow_id_type, &amp;escrow_object::id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_ratification_deadline&gt;, composite_key&lt;escrow_object, const_mem_fun &lt; escrow_object, bool, &amp;escrow_object::is_approved&gt;, member&lt;escrow_object, time_point_sec, &amp;escrow_object::ratification_deadline&gt;, member&lt;escrow_object, escrow_id_type, &amp;escrow_object::id&gt; &gt;, composite_key_compare &lt;std::less&lt;bool&gt;, std::less&lt;time_point_sec&gt;, std::less&lt;escrow_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_sbd_balance&gt;, composite_key&lt;escrow_object, member &lt; escrow_object, asset, &amp;escrow_object::sbd_balance&gt;, member&lt;escrow_object, escrow_id_type, &amp;escrow_object::id&gt; &gt;, composite_key_compare &lt;std::greater&lt;asset&gt;, std::less&lt;escrow_id_type&gt; &gt; &gt; &gt;, allocator &lt;escrow_object&gt; &gt; steemit::chain::escrow_index</definition>
        <argsstring></argsstring>
        <name>escrow_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="414" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1ac5c71fc943beade9c4583c5aad93cc6e" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, <ref refid="namespacesteemit_1_1chain_1a7490b7b7a75d8b64e4f2979de14ed9b6" kindref="member">savings_withdraw_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1aba8ed95f1346bafab3e23f7b9f509240" kindref="member">savings_withdraw_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_from_rid &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1acff5d2415bd87b1782bfd8ab8f93287e" kindref="member">savings_withdraw_object::from</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1a349b4c96292d5ed14225d0d1abefa31b" kindref="member">savings_withdraw_object::request_id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_to_complete &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1adebaeefecde2c1e2f235f126f79ba215" kindref="member">savings_withdraw_object::to</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1afbfcf4388430f676f0a17c8eb77254a9" kindref="member">savings_withdraw_object::complete</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, <ref refid="namespacesteemit_1_1chain_1a7490b7b7a75d8b64e4f2979de14ed9b6" kindref="member">savings_withdraw_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1aba8ed95f1346bafab3e23f7b9f509240" kindref="member">savings_withdraw_object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_complete_from_rid &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1afbfcf4388430f676f0a17c8eb77254a9" kindref="member">savings_withdraw_object::complete</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1acff5d2415bd87b1782bfd8ab8f93287e" kindref="member">savings_withdraw_object::from</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref>, uint32_t, &amp;<ref refid="classsteemit_1_1chain_1_1savings__withdraw__object_1a349b4c96292d5ed14225d0d1abefa31b" kindref="member">savings_withdraw_object::request_id</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1savings__withdraw__object" kindref="compound">savings_withdraw_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; savings_withdraw_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;savings_withdraw_object, savings_withdraw_id_type, &amp;savings_withdraw_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_from_rid&gt;, composite_key&lt;savings_withdraw_object, member &lt; savings_withdraw_object, account_name_type, &amp;savings_withdraw_object::from&gt;, member&lt;savings_withdraw_object, uint32_t, &amp;savings_withdraw_object::request_id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_to_complete&gt;, composite_key&lt;savings_withdraw_object, member &lt; savings_withdraw_object, account_name_type, &amp;savings_withdraw_object::to&gt;, member&lt;savings_withdraw_object, time_point_sec, &amp;savings_withdraw_object::complete&gt;, member&lt;savings_withdraw_object, savings_withdraw_id_type, &amp;savings_withdraw_object::id&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_complete_from_rid&gt;, composite_key&lt;savings_withdraw_object, member &lt; savings_withdraw_object, time_point_sec, &amp;savings_withdraw_object::complete&gt;, member&lt;savings_withdraw_object, account_name_type, &amp;savings_withdraw_object::from&gt;, member&lt;savings_withdraw_object, uint32_t, &amp;savings_withdraw_object::request_id&gt; &gt; &gt; &gt;, allocator &lt;savings_withdraw_object&gt; &gt; steemit::chain::savings_withdraw_index</definition>
        <argsstring></argsstring>
        <name>savings_withdraw_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="450" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1aa7f02ee07c768e28a6b060ac1258ea83" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1a6a86599ec7031c6e5028850a8d9bda4b" kindref="member">decline_voting_rights_request_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object_1a4f78ac4480ec3116345401b918cab290" kindref="member">decline_voting_rights_request_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object_1a6e8c8aed22ba3d1e71ffef908119b936" kindref="member">decline_voting_rights_request_object::account</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_effective_date &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object_1a96c4c8b9538e799d687b222e99c3d359" kindref="member">decline_voting_rights_request_object::effective_date</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object_1a6e8c8aed22ba3d1e71ffef908119b936" kindref="member">decline_voting_rights_request_object::account</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; time_point_sec &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1decline__voting__rights__request__object" kindref="compound">decline_voting_rights_request_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; decline_voting_rights_request_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;decline_voting_rights_request_object, decline_voting_rights_request_id_type, &amp;decline_voting_rights_request_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_account&gt;, member&lt;decline_voting_rights_request_object, account_id_type, &amp;decline_voting_rights_request_object::account&gt; &gt;, ordered_unique &lt;tag&lt;by_effective_date&gt;, composite_key&lt;decline_voting_rights_request_object, member &lt; decline_voting_rights_request_object, time_point_sec, &amp;decline_voting_rights_request_object::effective_date&gt;, member&lt;decline_voting_rights_request_object, account_id_type, &amp;decline_voting_rights_request_object::account&gt; &gt;, composite_key_compare &lt;std::less&lt;time_point_sec&gt;, std::less&lt;account_id_type&gt; &gt; &gt; &gt;, allocator &lt;decline_voting_rights_request_object&gt; &gt; steemit::chain::decline_voting_rights_request_index</definition>
        <argsstring></argsstring>
        <name>decline_voting_rights_request_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_objects.hpp" line="473" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_objects.hpp" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a399333bf0cdc8812d86c0a9c95355ec9" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1transaction__object" kindref="compound">transaction_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1transaction__object" kindref="compound">transaction_object</ref>, <ref refid="namespacesteemit_1_1chain_1a2536f2a3b63481337e970ffb7d31fa96" kindref="member">transaction_object_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1transaction__object_1a36ddb781c82c49a29f1bde277d1c6369" kindref="member">transaction_object::id</ref> &gt; &gt;, hashed_unique&lt; tag&lt; by_trx_id &gt;, BOOST_MULTI_INDEX_MEMBER(<ref refid="classsteemit_1_1chain_1_1transaction__object" kindref="compound">transaction_object</ref>, transaction_id_type, trx_id), std::hash&lt; transaction_id_type &gt; &gt;, ordered_non_unique&lt; tag&lt; by_expiration &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1transaction__object" kindref="compound">transaction_object</ref>, time_point_sec, &amp;<ref refid="classsteemit_1_1chain_1_1transaction__object_1ad966a4d965c7eedd347ebd1889474701" kindref="member">transaction_object::expiration</ref> &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1transaction__object" kindref="compound">transaction_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; transaction_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;transaction_object, transaction_object_id_type, &amp;transaction_object::id&gt; &gt;, hashed_unique&lt;tag&lt;by_trx_id&gt;, BOOST_MULTI_INDEX_MEMBER(transaction_object, transaction_id_type, trx_id), std::hash&lt;transaction_id_type&gt; &gt;, ordered_non_unique &lt;tag&lt;by_expiration&gt;, member&lt;transaction_object, time_point_sec, &amp;transaction_object::expiration&gt; &gt; &gt;, allocator &lt;transaction_object&gt; &gt; steemit::chain::transaction_index</definition>
        <argsstring></argsstring>
        <name>transaction_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="49" column="1" bodyfile="libraries/chain/include/steemit/chain/transaction_object.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1a4fff98f10161616d0b82f5a6f00eb604" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa0f93539a0ca722847f4c0aac79bd9a6" kindref="member">witness_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__object_1a8aa0ee14d9d5c33667e2615f8117764e" kindref="member">witness_object::id</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_work &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, digest_type, &amp;<ref refid="classsteemit_1_1chain_1_1witness__object_1a1e757fe3fdd8dfa7ea1f2d8b41782299" kindref="member">witness_object::last_work</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_name &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1witness__object_1a7c6fb65ca27cb93edd86aa22115b2875" kindref="member">witness_object::owner</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_pow &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, uint64_t, &amp;<ref refid="classsteemit_1_1chain_1_1witness__object_1a764f5f4b343d1caee7301201fc556bbe" kindref="member">witness_object::pow_worker</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_vote_name &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, share_type, &amp;<ref refid="classsteemit_1_1chain_1_1witness__object_1ac494496c0b0132813ea8f1c0b76104e8" kindref="member">witness_object::votes</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, account_name_type, &amp;<ref refid="classsteemit_1_1chain_1_1witness__object_1a7c6fb65ca27cb93edd86aa22115b2875" kindref="member">witness_object::owner</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; share_type &gt;, steemit::protocol::string_less &gt; &gt;, ordered_unique&lt; tag&lt; by_schedule_time &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, fc::uint128, &amp;<ref refid="group__virtual__time_1gaea609b3a5f9bd04d947af0b477af737b" kindref="member">witness_object::virtual_scheduled_time</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa0f93539a0ca722847f4c0aac79bd9a6" kindref="member">witness_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__object_1a8aa0ee14d9d5c33667e2615f8117764e" kindref="member">witness_object::id</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1witness__object" kindref="compound">witness_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; witness_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;witness_object, witness_id_type, &amp;witness_object::id&gt; &gt;, ordered_non_unique &lt;tag&lt;by_work&gt;, member&lt;witness_object, digest_type, &amp;witness_object::last_work&gt; &gt;, ordered_unique &lt;tag&lt;by_name&gt;, member&lt;witness_object, account_name_type, &amp;witness_object::owner&gt; &gt;, ordered_non_unique &lt;tag&lt;by_pow&gt;, member&lt;witness_object, uint64_t, &amp;witness_object::pow_worker&gt; &gt;, ordered_unique &lt;tag&lt;by_vote_name&gt;, composite_key&lt;witness_object, member &lt; witness_object, share_type, &amp;witness_object::votes&gt;, member&lt;witness_object, account_name_type, &amp;witness_object::owner&gt; &gt;, composite_key_compare &lt;std::greater&lt;share_type&gt;, steemit::protocol::string_less&gt; &gt;, ordered_unique &lt;tag&lt;by_schedule_time&gt;, composite_key&lt;witness_object, member &lt; witness_object, fc::uint128, &amp;witness_object::virtual_scheduled_time&gt;, member&lt;witness_object, witness_id_type, &amp;witness_object::id&gt; &gt; &gt; &gt;, allocator &lt;witness_object&gt; &gt; steemit::chain::witness_index</definition>
        <argsstring></argsstring>
        <name>witness_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/witness_objects.hpp" line="197" column="1" bodyfile="libraries/chain/include/steemit/chain/witness_objects.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1ae5d3f35bf6cd2acb1742d387eaafd118" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1a34015289e0526d2e26c1ae3a2c93769f" kindref="member">witness_vote_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__vote__object_1a4763a7d47ac809ae63427bce5b506458" kindref="member">witness_vote_object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account_witness &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__vote__object_1a646ce6ec1f01fba071fb4d14699683f6" kindref="member">witness_vote_object::account</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa0f93539a0ca722847f4c0aac79bd9a6" kindref="member">witness_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__vote__object_1acb329de33607019db5e4bcd7b171f880" kindref="member">witness_vote_object::witness</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa0f93539a0ca722847f4c0aac79bd9a6" kindref="member">witness_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_witness_account &gt;, composite_key&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa0f93539a0ca722847f4c0aac79bd9a6" kindref="member">witness_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__vote__object_1acb329de33607019db5e4bcd7b171f880" kindref="member">witness_vote_object::witness</ref> &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref>, <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__vote__object_1a646ce6ec1f01fba071fb4d14699683f6" kindref="member">witness_vote_object::account</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa0f93539a0ca722847f4c0aac79bd9a6" kindref="member">witness_id_type</ref> &gt;, std::less&lt; <ref refid="namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref> &gt; &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1witness__vote__object" kindref="compound">witness_vote_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; witness_vote_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;witness_vote_object, witness_vote_id_type, &amp;witness_vote_object::id&gt; &gt;, ordered_unique &lt;tag&lt;by_account_witness&gt;, composite_key&lt;witness_vote_object, member &lt; witness_vote_object, account_id_type, &amp;witness_vote_object::account&gt;, member&lt;witness_vote_object, witness_id_type, &amp;witness_vote_object::witness&gt; &gt;, composite_key_compare &lt;std::less&lt;account_id_type&gt;, std::less&lt;witness_id_type&gt; &gt; &gt;, ordered_unique &lt;tag&lt;by_witness_account&gt;, composite_key&lt;witness_vote_object, member &lt; witness_vote_object, witness_id_type, &amp;witness_vote_object::witness&gt;, member&lt;witness_vote_object, account_id_type, &amp;witness_vote_object::account&gt; &gt;, composite_key_compare &lt;std::less&lt;witness_id_type&gt;, std::less&lt;account_id_type&gt; &gt; &gt; &gt;, allocator &lt;witness_vote_object&gt; &gt; steemit::chain::witness_vote_index</definition>
        <argsstring></argsstring>
        <name>witness_vote_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/witness_objects.hpp" line="225" column="1" bodyfile="libraries/chain/include/steemit/chain/witness_objects.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesteemit_1_1chain_1acfba27cf047f97f9ef5baee95e634222" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classsteemit_1_1chain_1_1witness__schedule__object" kindref="compound">witness_schedule_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classsteemit_1_1chain_1_1witness__schedule__object" kindref="compound">witness_schedule_object</ref>, <ref refid="namespacesteemit_1_1chain_1a97478cbfa8baa7abb6ef2de32c9f2dd1" kindref="member">witness_schedule_id_type</ref>, &amp;<ref refid="classsteemit_1_1chain_1_1witness__schedule__object_1adf07f44b2d82f48feb120e2bac94281b" kindref="member">witness_schedule_object::id</ref> &gt; &gt; &gt;, allocator&lt; <ref refid="classsteemit_1_1chain_1_1witness__schedule__object" kindref="compound">witness_schedule_object</ref> &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; witness_schedule_object, indexed_by&lt; ordered_unique &lt; tag &lt; by_id&gt;, member&lt;witness_schedule_object, witness_schedule_id_type, &amp;witness_schedule_object::id&gt; &gt; &gt;, allocator &lt;witness_schedule_object&gt; &gt; steemit::chain::witness_schedule_index</definition>
        <argsstring></argsstring>
        <name>witness_schedule_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/witness_objects.hpp" line="235" column="1" bodyfile="libraries/chain/include/steemit/chain/witness_objects.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a3c9bb0fa6206612eaefc4c584db86b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::chain::STEEMIT_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(transfer)</argsstring>
        <name>STEEMIT_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>transfer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/database_exceptions.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a941dda551c1a9ed06d3e04ba03624f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::chain::STEEMIT_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(account_create)</argsstring>
        <name>STEEMIT_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>account_create</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/database_exceptions.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a35d309c76d05c42c4a088dfc7f299514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::chain::STEEMIT_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(account_update)</argsstring>
        <name>STEEMIT_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>account_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/database_exceptions.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1affba0beb4814efd5d54a62f2cc77d20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiIndexType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void steemit::chain::_add_index_impl</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>_add_index_impl</name>
        <param>
          <type><ref refid="classsteemit_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/index.hpp" line="9" column="1" bodyfile="libraries/chain/include/steemit/chain/index.hpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a51399564750ae3daf80e61dd86b323a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiIndexType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void steemit::chain::add_core_index</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>add_core_index</name>
        <param>
          <type><ref refid="classsteemit_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/index.hpp" line="14" column="1" bodyfile="libraries/chain/include/steemit/chain/index.hpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1ae9f3d927f7fde00d39e6197adf4609cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiIndexType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void steemit::chain::add_plugin_index</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>add_plugin_index</name>
        <param>
          <type><ref refid="classsteemit_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/index.hpp" line="19" column="1" bodyfile="libraries/chain/include/steemit/chain/index.hpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a1064571c7c802847adc018fbbaab622e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool steemit::chain::operator==</definition>
        <argsstring>(const shared_authority &amp;a, const shared_authority &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsteemit_1_1chain_1_1shared__authority" kindref="compound">shared_authority</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structsteemit_1_1chain_1_1shared__authority" kindref="compound">shared_authority</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/shared_authority.hpp" line="102" column="1" bodyfile="libraries/chain/shared_authority.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a23bb70b203db9ca56d7e4a56b223156b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool steemit::chain::operator==</definition>
        <argsstring>(const authority &amp;a, const shared_authority &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const authority &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structsteemit_1_1chain_1_1shared__authority" kindref="compound">shared_authority</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/shared_authority.hpp" line="104" column="1" bodyfile="libraries/chain/shared_authority.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a61319eb84c0e617b9601c64a53f53f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool steemit::chain::operator==</definition>
        <argsstring>(const shared_authority &amp;a, const authority &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsteemit_1_1chain_1_1shared__authority" kindref="compound">shared_authority</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const authority &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/shared_authority.hpp" line="106" column="1" bodyfile="libraries/chain/shared_authority.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1ad9a537ae816bc1796cbfcadc6703b821" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const map&lt; uint32_t, checksum_type &gt; &amp;</type>
        <definition>static const map&lt;uint32_t, checksum_type&gt;&amp; steemit::chain::get_shared_db_merkle</definition>
        <argsstring>()</argsstring>
        <name>get_shared_db_merkle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/shared_db_merkle.hpp" line="6" column="1" bodyfile="libraries/chain/include/steemit/chain/shared_db_merkle.hpp" bodystart="6" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1ae2fe3c2019e12f2bb2735b5631219bf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string steemit::chain::to_string</definition>
        <argsstring>(const shared_string &amp;str)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="namespacesteemit_1_1chain_1a8e2d955447720336a4deaae60ad49519" kindref="member">shared_string</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="35" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a41ef5a08e77cf4ee11fa9add4c8e0cdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::chain::from_string</definition>
        <argsstring>(shared_string &amp;out, const string &amp;in)</argsstring>
        <name>from_string</name>
        <param>
          <type><ref refid="namespacesteemit_1_1chain_1a8e2d955447720336a4deaae60ad49519" kindref="member">shared_string</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="39" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1ac5633d2af74701edecffacd7340d20c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::chain::validate_permlink_0_1</definition>
        <argsstring>(const string &amp;permlink)</argsstring>
        <name>validate_permlink_0_1</name>
        <param>
          <type>const string &amp;</type>
          <declname>permlink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/steem_evaluator.cpp" line="28" column="1" bodyfile="libraries/chain/steem_evaluator.cpp" bodystart="28" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacesteemit_1_1chain_1a2ac628df10ff42af9937aa6485f2d87f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void steemit::chain::pow_apply</definition>
        <argsstring>(database &amp;db, Operation o)</argsstring>
        <name>pow_apply</name>
        <param>
          <type><ref refid="classsteemit_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>highest voted witness at time of recovery</para><para>POW reward depends upon whether we are before or after MINER_VOTING kicks in</para><para>pay the witness that includes this POW </para>        </inbodydescription>
        <location file="libraries/chain/steem_evaluator.cpp" line="1527" column="1" bodyfile="libraries/chain/steem_evaluator.cpp" bodystart="1527" bodyend="1621"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/block_log.cpp" line="8" column="1"/>
  </compounddef>
</doxygen>
