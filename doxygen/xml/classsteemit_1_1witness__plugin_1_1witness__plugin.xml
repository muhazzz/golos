<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsteemit_1_1witness__plugin_1_1witness__plugin" kind="class" language="C++" prot="public">
    <compoundname>steemit::witness_plugin::witness_plugin</compoundname>
    <basecompoundref refid="classsteemit_1_1app_1_1plugin" prot="public" virt="non-virtual">steemit::app::plugin</basecompoundref>
    <includes refid="witness_8hpp" local="no">witness.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1af427b09ea24cb7e1970459cb3f34b6be" prot="private" static="no" mutable="no">
        <type>boost::program_options::variables_map</type>
        <definition>boost::program_options::variables_map steemit::witness_plugin::witness_plugin::_options</definition>
        <argsstring></argsstring>
        <name>_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="101" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1af5afbb898d8ead6f9012febc1e40c029" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool steemit::witness_plugin::witness_plugin::_production_enabled</definition>
        <argsstring></argsstring>
        <name>_production_enabled</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="102" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1ad5396d6b7ae1298305ea9f6449b2eb2d" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t steemit::witness_plugin::witness_plugin::_required_witness_participation</definition>
        <argsstring></argsstring>
        <name>_required_witness_participation</name>
        <initializer>= 33 * STEEMIT_1_PERCENT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="103" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a92506076c8eb45fd11f0f38329018111" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t steemit::witness_plugin::witness_plugin::_production_skip_flags</definition>
        <argsstring></argsstring>
        <name>_production_skip_flags</name>
        <initializer>= <ref refid="classsteemit_1_1chain_1_1database_1afd81b7d9bc2099fda77544ddc53f9dc5addc8b88d20727cbd0fc4a1b37e2cc4ed" kindref="member">steemit::chain::database::skip_nothing</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="104" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1ae597383ec87428dc8506404831fc07a5" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t steemit::witness_plugin::witness_plugin::_mining_threads</definition>
        <argsstring></argsstring>
        <name>_mining_threads</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="105" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1aa5ea6ccb9ee1422d497322b782d6d318" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t steemit::witness_plugin::witness_plugin::_head_block_num</definition>
        <argsstring></argsstring>
        <name>_head_block_num</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="107" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1aed98e0a7c657340e569a01f9029fd58b" prot="private" static="no" mutable="no">
        <type>block_id_type</type>
        <definition>block_id_type steemit::witness_plugin::witness_plugin::_head_block_id</definition>
        <argsstring></argsstring>
        <name>_head_block_id</name>
        <initializer>= block_id_type()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="108" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1af00b6cf31136c5d66a867355c556d7a3" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t steemit::witness_plugin::witness_plugin::_total_hashes</definition>
        <argsstring></argsstring>
        <name>_total_hashes</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="109" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a90ed8c08c0e4f6d63388392898556b25" prot="private" static="no" mutable="no">
        <type>fc::time_point</type>
        <definition>fc::time_point steemit::witness_plugin::witness_plugin::_hash_start_time</definition>
        <argsstring></argsstring>
        <name>_hash_start_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="110" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a248c6f50d5d34a86f467d9f1d18345ba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; fc::thread &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;fc::thread&gt; &gt; steemit::witness_plugin::witness_plugin::_thread_pool</definition>
        <argsstring></argsstring>
        <name>_thread_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="112" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a1aa5fd1e987bb5f7269a7cf5493031d0" prot="private" static="no" mutable="no">
        <type>std::map&lt; public_key_type, fc::ecc::private_key &gt;</type>
        <definition>std::map&lt;public_key_type, fc::ecc::private_key&gt; steemit::witness_plugin::witness_plugin::_private_keys</definition>
        <argsstring></argsstring>
        <name>_private_keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="114" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1ac66ff1c31dc45a0da33770d5bcadc173" prot="private" static="no" mutable="no">
        <type>std::set&lt; string &gt;</type>
        <definition>std::set&lt;string&gt; steemit::witness_plugin::witness_plugin::_witnesses</definition>
        <argsstring></argsstring>
        <name>_witnesses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="115" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a56b4440ad172e0010ce859f42f379447" prot="private" static="no" mutable="no">
        <type>std::map&lt; string, public_key_type &gt;</type>
        <definition>std::map&lt;string, public_key_type&gt; steemit::witness_plugin::witness_plugin::_miners</definition>
        <argsstring></argsstring>
        <name>_miners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="116" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a56a26843bc89e984adb4c9ef23bcdac7" prot="private" static="no" mutable="no">
        <type>protocol::chain_properties</type>
        <definition>protocol::chain_properties steemit::witness_plugin::witness_plugin::_miner_prop_vote</definition>
        <argsstring></argsstring>
        <name>_miner_prop_vote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="117" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1ade2c328f3a904ad225c9a50a5a15afa2" prot="private" static="no" mutable="no">
        <type>fc::future&lt; void &gt;</type>
        <definition>fc::future&lt;void&gt; steemit::witness_plugin::witness_plugin::_block_production_task</definition>
        <argsstring></argsstring>
        <name>_block_production_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="118" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1ae195e2685fe9990506f17cdcf410a69f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>steemit::witness_plugin::witness_plugin::witness_plugin</definition>
        <argsstring>(application *app)</argsstring>
        <name>witness_plugin</name>
        <param>
          <type><ref refid="classsteemit_1_1app_1_1application" kindref="compound">application</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="56" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="56" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a76c5dc5b8f236ea091af3157c61b9a26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>steemit::witness_plugin::witness_plugin::~witness_plugin</definition>
        <argsstring>()</argsstring>
        <name>~witness_plugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="59" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a71c4741f406e590d0473c52add1a194a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string witness_plugin::plugin_name</definition>
        <argsstring>() const override</argsstring>
        <name>plugin_name</name>
        <reimplements refid="classsteemit_1_1app_1_1plugin_1a3595f45362d8619b8b720b5afb581896">plugin_name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="71" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a00ff7756f3b429f18ea47addfa8894bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void witness_plugin::plugin_set_program_options</definition>
        <argsstring>(boost::program_options::options_description &amp;command_line_options, boost::program_options::options_description &amp;config_file_options) override</argsstring>
        <name>plugin_set_program_options</name>
        <reimplements refid="classsteemit_1_1app_1_1plugin_1accf40868ee6da23791180bf1bc4e1ca0">plugin_set_program_options</reimplements>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>command_line_options</declname>
        </param>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>config_file_options</declname>
        </param>
        <briefdescription>
<para>Fill in command line parameters used by the plugin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command_line_options</parametername>
</parameternamelist>
<parameterdescription>
<para>All options this plugin supports taking on the command-line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_file_options</parametername>
</parameternamelist>
<parameterdescription>
<para>All options this plugin supports storing in a configuration file</para></parameterdescription>
</parameteritem>
</parameterlist>
This method populates its arguments with any command-line and configuration file options the plugin supports. If a plugin does not need these options, it may simply provide an empty implementation of this method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="73" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="55" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a33a6bfdfc0a816b07485ec2c778c205e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::witness_plugin::witness_plugin::set_block_production</definition>
        <argsstring>(bool allow)</argsstring>
        <name>set_block_production</name>
        <param>
          <type>bool</type>
          <declname>allow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="78" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a84af636fe4eda28a24022f1bb9728b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void witness_plugin::plugin_initialize</definition>
        <argsstring>(const boost::program_options::variables_map &amp;options) override</argsstring>
        <name>plugin_initialize</name>
        <reimplements refid="classsteemit_1_1app_1_1plugin_1a494e06ed857fe0f3e647a8a4c14db07f">plugin_initialize</reimplements>
        <param>
          <type>const boost::program_options::variables_map &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Perform early startup routines and register plugin indexes, callbacks, etc. </para>        </briefdescription>
        <detaileddescription>
<para>Plugins MUST supply a method initialize() which will be called early in the application startup. This method should contain early setup code such as initializing variables, adding indexes to the database, registering callback methods from the database, adding APIs, etc., as well as applying any options in the options map</para><para>This method is called BEFORE the database is open, therefore any routines which require any chain state MUST NOT be called by this method. These routines should be performed in startup() instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The options passed to the application, via configuration files or command line </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="82" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="85" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a4cbb1895d5c6b008c0e9c28aaf1d6dc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void witness_plugin::plugin_startup</definition>
        <argsstring>() override</argsstring>
        <name>plugin_startup</name>
        <reimplements refid="classsteemit_1_1app_1_1plugin_1a678b76647b9147d5b0a7e6cee75b380f">plugin_startup</reimplements>
        <briefdescription>
<para>Begin normal runtime operations. </para>        </briefdescription>
        <detaileddescription>
<para>Plugins MUST supply a method startup() which will be called at the end of application startup. This method should contain code which schedules any tasks, or requires chain state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="84" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="154" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1acc9eac1e5c7f18eeda548e7820afc653" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void witness_plugin::plugin_shutdown</definition>
        <argsstring>() override</argsstring>
        <name>plugin_shutdown</name>
        <reimplements refid="classsteemit_1_1app_1_1plugin_1a2f948dcff82c67c70dbb45bd229dae68">plugin_shutdown</reimplements>
        <briefdescription>
<para>Cleanly shut down the plugin. </para>        </briefdescription>
        <detaileddescription>
<para>This is called to request a clean shutdown (e.g. due to SIGINT or SIGTERM). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="86" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="183" bodyend="190"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1aaf64ccf22dad36971cea270de5e07ee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void witness_plugin::on_applied_block</definition>
        <argsstring>(const chain::signed_block &amp;b)</argsstring>
        <name>on_applied_block</name>
        <param>
          <type>const chain::signed_block &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Every time a block is produced, this method is called. This method will iterate through all mining accounts specified by commandline and for which the private key is known. The first account that isn&apos;t already scheduled in the mining queue is selected to mine for the BLOCK_INTERVAL minus 1 second. If a POW is solved or a a new block comes in then the worker will stop early.</para><para>Work is farmed out to N threads in parallel based upon the value specified on the command line.</para><para>The miner assumes that the next block will be produced on time and that network propagation will take at least 1 second. This 1 second consists of the time it took to receive the block and how long it will take to broadcast the work. In other words, we assume 0.5s broadcast times and therefore do not even attempt work that cannot be delivered on time. </para>        </detaileddescription>
        <inbodydescription>
<para>save these variables to be captured by worker lambda</para><para>skipping miner for lack of private key </para>        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="89" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="373" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1ada7b1ac713b59a6857692e92b4ad31ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void witness_plugin::start_mining</definition>
        <argsstring>(const fc::ecc::public_key &amp;pub, const fc::ecc::private_key &amp;pk, const string &amp;name, const steemit::chain::signed_block &amp;b)</argsstring>
        <name>start_mining</name>
        <param>
          <type>const fc::ecc::public_key &amp;</type>
          <declname>pub</declname>
        </param>
        <param>
          <type>const fc::ecc::private_key &amp;</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const steemit::chain::signed_block &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>signal other workers to stop </para>        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="91" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="433" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a2ff12690ad83b34383daac2749efe1c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void witness_plugin::schedule_production_loop</definition>
        <argsstring>()</argsstring>
        <name>schedule_production_loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="95" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="192" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1aaf737ede1f3cc7180edfd368bf741aa5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesteemit_1_1witness__plugin_1_1block__production__condition_1ac00d0927a92b780e8a60761ae698fdf3" kindref="member">block_production_condition::block_production_condition_enum</ref></type>
        <definition>block_production_condition::block_production_condition_enum witness_plugin::block_production_loop</definition>
        <argsstring>()</argsstring>
        <name>block_production_loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="97" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="210" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1witness__plugin_1_1witness__plugin_1a2479b6c34efacb1666b66939228cf260" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesteemit_1_1witness__plugin_1_1block__production__condition_1ac00d0927a92b780e8a60761ae698fdf3" kindref="member">block_production_condition::block_production_condition_enum</ref></type>
        <definition>block_production_condition::block_production_condition_enum witness_plugin::maybe_produce_block</definition>
        <argsstring>(fc::mutable_variant_object &amp;capture)</argsstring>
        <name>maybe_produce_block</name>
        <param>
          <type>fc::mutable_variant_object &amp;</type>
          <declname>capture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="99" column="1" bodyfile="libraries/plugins/witness/witness.cpp" bodystart="272" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1101">
        <label>steemit::witness_plugin::witness_plugin</label>
        <link refid="classsteemit_1_1witness__plugin_1_1witness__plugin"/>
        <childnode refid="1102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1103">
        <label>steemit::app::abstract_plugin</label>
        <link refid="classsteemit_1_1app_1_1abstract__plugin"/>
      </node>
      <node id="1102">
        <label>steemit::app::plugin</label>
        <link refid="classsteemit_1_1app_1_1plugin"/>
        <childnode refid="1103" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1104">
        <label>steemit::witness_plugin::witness_plugin</label>
        <link refid="classsteemit_1_1witness__plugin_1_1witness__plugin"/>
        <childnode refid="1105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1106">
        <label>steemit::app::abstract_plugin</label>
        <link refid="classsteemit_1_1app_1_1abstract__plugin"/>
      </node>
      <node id="1105">
        <label>steemit::app::plugin</label>
        <link refid="classsteemit_1_1app_1_1plugin"/>
        <childnode refid="1106" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/plugins/witness/include/steemit/witness/witness.hpp" line="54" column="1" bodyfile="libraries/plugins/witness/include/steemit/witness/witness.hpp" bodystart="54" bodyend="119"/>
    <listofallmembers>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1ade2c328f3a904ad225c9a50a5a15afa2" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_block_production_task</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a90ed8c08c0e4f6d63388392898556b25" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_hash_start_time</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1aed98e0a7c657340e569a01f9029fd58b" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_head_block_id</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1aa5ea6ccb9ee1422d497322b782d6d318" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_head_block_num</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a56a26843bc89e984adb4c9ef23bcdac7" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_miner_prop_vote</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a56b4440ad172e0010ce859f42f379447" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_miners</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1ae597383ec87428dc8506404831fc07a5" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_mining_threads</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1af427b09ea24cb7e1970459cb3f34b6be" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_options</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a1aa5fd1e987bb5f7269a7cf5493031d0" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_private_keys</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1af5afbb898d8ead6f9012febc1e40c029" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_production_enabled</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a92506076c8eb45fd11f0f38329018111" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_production_skip_flags</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1ad5396d6b7ae1298305ea9f6449b2eb2d" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_required_witness_participation</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a248c6f50d5d34a86f467d9f1d18345ba" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_thread_pool</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1af00b6cf31136c5d66a867355c556d7a3" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_total_hashes</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1ac66ff1c31dc45a0da33770d5bcadc173" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>_witnesses</name></member>
      <member refid="classsteemit_1_1app_1_1plugin_1a64dbd02f97410a3678dbe9c2a4c92c70" prot="public" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>app</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1aaf737ede1f3cc7180edfd368bf741aa5" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>block_production_loop</name></member>
      <member refid="classsteemit_1_1app_1_1plugin_1adb0c1063347f4911e9a815c32058c2a9" prot="public" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>database</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a2479b6c34efacb1666b66939228cf260" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>maybe_produce_block</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1aaf64ccf22dad36971cea270de5e07ee6" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>on_applied_block</name></member>
      <member refid="classsteemit_1_1app_1_1plugin_1a48688211086fc8426bcdb587de263ef6" prot="protected" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>p2p_node</name></member>
      <member refid="classsteemit_1_1app_1_1plugin_1aad2d44e69837f6f1ef3b840842034cdd" prot="public" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>plugin</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a84af636fe4eda28a24022f1bb9728b5f" prot="public" virt="virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>plugin_initialize</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a71c4741f406e590d0473c52add1a194a" prot="public" virt="virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>plugin_name</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a00ff7756f3b429f18ea47addfa8894bc" prot="public" virt="virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>plugin_set_program_options</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1acc9eac1e5c7f18eeda548e7820afc653" prot="public" virt="virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>plugin_shutdown</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a4cbb1895d5c6b008c0e9c28aaf1d6dc0" prot="public" virt="virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>plugin_startup</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a2ff12690ad83b34383daac2749efe1c9" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>schedule_production_loop</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a33a6bfdfc0a816b07485ec2c778c205e" prot="public" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>set_block_production</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1ada7b1ac713b59a6857692e92b4ad31ac" prot="private" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>start_mining</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1ae195e2685fe9990506f17cdcf410a69f" prot="public" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>witness_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1abstract__plugin_1ad24ecfd977ff071023455ae1eb3c33f0" prot="public" virt="virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>~abstract_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1plugin_1af882b5ab549815c71d909de0384f28eb" prot="public" virt="virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>~plugin</name></member>
      <member refid="classsteemit_1_1witness__plugin_1_1witness__plugin_1a76c5dc5b8f236ea091af3157c61b9a26" prot="public" virt="non-virtual"><scope>steemit::witness_plugin::witness_plugin</scope><name>~witness_plugin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
