<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsteemit_1_1chain_1_1transaction__object" kind="class" language="C++" prot="public">
    <compoundname>steemit::chain::transaction_object</compoundname>
    <basecompoundref prot="public" virt="non-virtual">chainbase::object&lt; transaction_object_type, transaction_object &gt;</basecompoundref>
    <includes refid="transaction__object_8hpp" local="no">transaction_object.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsteemit_1_1chain_1_1transaction__object_1a36ddb781c82c49a29f1bde277d1c6369" prot="public" static="no" mutable="no">
        <type>id_type</type>
        <definition>id_type steemit::chain::transaction_object::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="30" column="1" bodyfile="libraries/chain/include/steemit/chain/transaction_object.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1chain_1_1transaction__object_1a8955da0f74cc5f31500b070bd6392675" prot="public" static="no" mutable="no">
        <type>bip::vector&lt; char, allocator&lt; char &gt; &gt;</type>
        <definition>bip::vector&lt;char, allocator&lt;char&gt; &gt; steemit::chain::transaction_object::packed_trx</definition>
        <argsstring></argsstring>
        <name>packed_trx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="32" column="1" bodyfile="libraries/chain/include/steemit/chain/transaction_object.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1chain_1_1transaction__object_1aa7e8a6b90f63e4585275f6aa888d1af8" prot="public" static="no" mutable="no">
        <type>transaction_id_type</type>
        <definition>transaction_id_type steemit::chain::transaction_object::trx_id</definition>
        <argsstring></argsstring>
        <name>trx_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="33" column="1" bodyfile="libraries/chain/include/steemit/chain/transaction_object.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1chain_1_1transaction__object_1ad966a4d965c7eedd347ebd1889474701" prot="public" static="no" mutable="no">
        <type>time_point_sec</type>
        <definition>time_point_sec steemit::chain::transaction_object::expiration</definition>
        <argsstring></argsstring>
        <name>expiration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="34" column="1" bodyfile="libraries/chain/include/steemit/chain/transaction_object.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsteemit_1_1chain_1_1transaction__object_1aacf5b4c6cbc3505f649c1be52d1c06d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::chain::transaction_object::transaction_object</definition>
        <argsstring>()=delete</argsstring>
        <name>transaction_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="21" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsteemit_1_1chain_1_1transaction__object_1a82e228b68e6ea46a29eaedefc6d93a30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Constructor</type>
          </param>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>steemit::chain::transaction_object::transaction_object</definition>
        <argsstring>(Constructor &amp;&amp;c, allocator&lt; Allocator &gt; a)</argsstring>
        <name>transaction_object</name>
        <param>
          <type>Constructor &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>allocator&lt; Allocator &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="25" column="1" bodyfile="libraries/chain/include/steemit/chain/transaction_object.hpp" bodystart="25" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The purpose of this object is to enable the detection of duplicate transactions. When a transaction is included in a block a <ref refid="classsteemit_1_1chain_1_1transaction__object" kindref="compound">transaction_object</ref> is added. At the end of block processing all transaction_objects that have expired can be removed from the index. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1042">
        <label>chainbase::object&lt; transaction_object_type, transaction_object &gt;</label>
      </node>
      <node id="1041">
        <label>steemit::chain::transaction_object</label>
        <link refid="classsteemit_1_1chain_1_1transaction__object"/>
        <childnode refid="1042" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1045">
        <label>time_point_sec</label>
      </node>
      <node id="1044">
        <label>chainbase::object&lt; transaction_object_type, transaction_object &gt;</label>
      </node>
      <node id="1046">
        <label>transaction_id_type</label>
      </node>
      <node id="1043">
        <label>steemit::chain::transaction_object</label>
        <link refid="classsteemit_1_1chain_1_1transaction__object"/>
        <childnode refid="1044" relation="public-inheritance">
        </childnode>
        <childnode refid="1045" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
        <childnode refid="1046" relation="usage">
          <edgelabel>trx_id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/steemit/chain/transaction_object.hpp" line="20" column="1" bodyfile="libraries/chain/include/steemit/chain/transaction_object.hpp" bodystart="19" bodyend="35"/>
    <listofallmembers>
      <member refid="classsteemit_1_1chain_1_1transaction__object_1ad966a4d965c7eedd347ebd1889474701" prot="public" virt="non-virtual"><scope>steemit::chain::transaction_object</scope><name>expiration</name></member>
      <member refid="classsteemit_1_1chain_1_1transaction__object_1a36ddb781c82c49a29f1bde277d1c6369" prot="public" virt="non-virtual"><scope>steemit::chain::transaction_object</scope><name>id</name></member>
      <member refid="classsteemit_1_1chain_1_1transaction__object_1a8955da0f74cc5f31500b070bd6392675" prot="public" virt="non-virtual"><scope>steemit::chain::transaction_object</scope><name>packed_trx</name></member>
      <member refid="classsteemit_1_1chain_1_1transaction__object_1aacf5b4c6cbc3505f649c1be52d1c06d7" prot="private" virt="non-virtual"><scope>steemit::chain::transaction_object</scope><name>transaction_object</name></member>
      <member refid="classsteemit_1_1chain_1_1transaction__object_1a82e228b68e6ea46a29eaedefc6d93a30" prot="public" virt="non-virtual"><scope>steemit::chain::transaction_object</scope><name>transaction_object</name></member>
      <member refid="classsteemit_1_1chain_1_1transaction__object_1aa7e8a6b90f63e4585275f6aa888d1af8" prot="public" virt="non-virtual"><scope>steemit::chain::transaction_object</scope><name>trx_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
