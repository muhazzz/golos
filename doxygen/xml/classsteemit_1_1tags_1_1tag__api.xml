<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsteemit_1_1tags_1_1tag__api" kind="class" language="C++" prot="public">
    <compoundname>steemit::tags::tag_api</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; tag_api &gt;</basecompoundref>
    <includes refid="tags__plugin_8hpp" local="no">tags_plugin.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsteemit_1_1tags_1_1tag__api_1a55ac80d1a7babbed425f6a89aea921c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>steemit::tags::tag_api::tag_api</definition>
        <argsstring>()</argsstring>
        <name>tag_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="494" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="494" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1tags_1_1tag__api_1ac395706aa6876f875e6f8e53c8b7ff0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>steemit::tags::tag_api::tag_api</definition>
        <argsstring>(const app::api_context &amp;ctx)</argsstring>
        <name>tag_api</name>
        <param>
          <type>const <ref refid="structsteemit_1_1app_1_1api__context" kindref="compound">app::api_context</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="497" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="497" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1tags_1_1tag__api_1abb63be62eb3cd7639a3d57fef76b7415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::tag_api::on_api_startup</definition>
        <argsstring>()</argsstring>
        <name>on_api_startup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="500" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="500" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1tags_1_1tag__api_1a9464658de144c223cc911ebd024b850d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; <ref refid="classsteemit_1_1tags_1_1tag__stats__object" kindref="compound">tag_stats_object</ref> &gt;</type>
        <definition>vector&lt;tag_stats_object&gt; steemit::tags::tag_api::get_tags</definition>
        <argsstring>() const</argsstring>
        <name>get_tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="503" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="503" bodyend="505"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This API is used to query data maintained by the <ref refid="classsteemit_1_1tags_1_1tags__plugin" kindref="compound">tags_plugin</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1000">
        <label>steemit::tags::tag_api</label>
        <link refid="classsteemit_1_1tags_1_1tag__api"/>
        <childnode refid="1001" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1001">
        <label>std::enable_shared_from_this&lt; tag_api &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1002">
        <label>steemit::tags::tag_api</label>
        <link refid="classsteemit_1_1tags_1_1tag__api"/>
        <childnode refid="1003" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1003">
        <label>std::enable_shared_from_this&lt; tag_api &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="492" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="492" bodyend="509"/>
    <listofallmembers>
      <member refid="classsteemit_1_1tags_1_1tag__api_1a9464658de144c223cc911ebd024b850d" prot="public" virt="non-virtual"><scope>steemit::tags::tag_api</scope><name>get_tags</name></member>
      <member refid="classsteemit_1_1tags_1_1tag__api_1abb63be62eb3cd7639a3d57fef76b7415" prot="public" virt="non-virtual"><scope>steemit::tags::tag_api</scope><name>on_api_startup</name></member>
      <member refid="classsteemit_1_1tags_1_1tag__api_1a55ac80d1a7babbed425f6a89aea921c1" prot="public" virt="non-virtual"><scope>steemit::tags::tag_api</scope><name>tag_api</name></member>
      <member refid="classsteemit_1_1tags_1_1tag__api_1ac395706aa6876f875e6f8e53c8b7ff0e" prot="public" virt="non-virtual"><scope>steemit::tags::tag_api</scope><name>tag_api</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
