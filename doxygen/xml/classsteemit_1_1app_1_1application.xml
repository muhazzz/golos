<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsteemit_1_1app_1_1application" kind="class" language="C++" prot="public">
    <compoundname>steemit::app::application</compoundname>
    <includes refid="application_8hpp" local="no">application.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1ae9feb8b265f6b9b7238ee7ea6a4112a7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool steemit::app::application::_read_only</definition>
        <argsstring></argsstring>
        <name>_read_only</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="135" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1afb1540d80a1ed6b5c043f77843342da3" prot="public" static="no" mutable="no">
        <type>fc::optional&lt; fc::api&lt; <ref refid="classsteemit_1_1app_1_1network__broadcast__api" kindref="compound">network_broadcast_api</ref> &gt; &gt;</type>
        <definition>fc::optional&lt;fc::api&lt;network_broadcast_api&gt; &gt; steemit::app::application::_remote_net_api</definition>
        <argsstring></argsstring>
        <name>_remote_net_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="136" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1a751df66dfaed219aebd42bab646f6fb5" prot="public" static="no" mutable="no">
        <type>fc::optional&lt; fc::api&lt; <ref refid="classsteemit_1_1app_1_1login__api" kindref="compound">login_api</ref> &gt; &gt;</type>
        <definition>fc::optional&lt;fc::api&lt;login_api&gt; &gt; steemit::app::application::_remote_login</definition>
        <argsstring></argsstring>
        <name>_remote_login</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="137" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1aa5c9eac8de025393b677115487b5df9c" prot="public" static="no" mutable="no">
        <type>fc::http::websocket_connection_ptr</type>
        <definition>fc::http::websocket_connection_ptr steemit::app::application::_ws_ptr</definition>
        <argsstring></argsstring>
        <name>_ws_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="138" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1a47ae9acb1717db941d9cd9aaed756d41" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; fc::rpc::websocket_api_connection &gt;</type>
        <definition>std::shared_ptr&lt;fc::rpc::websocket_api_connection&gt; steemit::app::application::_ws_apic</definition>
        <argsstring></argsstring>
        <name>_ws_apic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="139" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1af98a6616fbbd46ae0fefa03dc9968656" prot="public" static="no" mutable="no">
        <type>fc::http::websocket_client</type>
        <definition>fc::http::websocket_client steemit::app::application::_client</definition>
        <argsstring></argsstring>
        <name>_client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="140" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1a2bbbd6b25c094e1d43b48b340c11e204" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classsteemit_1_1app_1_1detail_1_1application__impl" kindref="compound">detail::application_impl</ref> &gt;</type>
        <definition>std::shared_ptr&lt;detail::application_impl&gt; steemit::app::application::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="143" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1a6ff575db5494bcb78788a51837483eaf" prot="private" static="no" mutable="no">
        <type>boost::program_options::options_description</type>
        <definition>boost::program_options::options_description steemit::app::application::_cli_options</definition>
        <argsstring></argsstring>
        <name>_cli_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="145" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1a46aa084bee7a18ff9546369067174212" prot="private" static="no" mutable="no">
        <type>boost::program_options::options_description</type>
        <definition>boost::program_options::options_description steemit::app::application::_cfg_options</definition>
        <argsstring></argsstring>
        <name>_cfg_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="146" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsteemit_1_1app_1_1application_1a2df586e5558e2a98a0d3dae5c76b9ce5" prot="private" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="classsteemit_1_1app_1_1plugin" kindref="compound">plugin</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;plugin&gt; steemit::app::application::null_plugin</definition>
        <argsstring></argsstring>
        <name>null_plugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="148" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1ab6eda7ccd905d20adf222f95ccd6132c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::app::application::application</definition>
        <argsstring>()</argsstring>
        <name>application</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="55" column="1" bodyfile="libraries/app/application.cpp" bodystart="863" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a1534af007972a6d4de027d0164f86288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::app::application::~application</definition>
        <argsstring>()</argsstring>
        <name>~application</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="57" column="1" bodyfile="libraries/app/application.cpp" bodystart="867" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1ab2a6138021461046c969abd40bccdd05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::set_program_options</definition>
        <argsstring>(boost::program_options::options_description &amp;command_line_options, boost::program_options::options_description &amp;configuration_file_options) const</argsstring>
        <name>set_program_options</name>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>command_line_options</declname>
        </param>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>configuration_file_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="59" column="1" bodyfile="libraries/app/application.cpp" bodystart="881" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a1b9f0eec92e8d0aaca235555e0c70f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::initialize</definition>
        <argsstring>(const fc::path &amp;data_dir, const boost::program_options::variables_map &amp;options)</argsstring>
        <name>initialize</name>
        <param>
          <type>const fc::path &amp;</type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>const boost::program_options::variables_map &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="62" column="1" bodyfile="libraries/app/application.cpp" bodystart="923" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1aae00cad21a96a7257f02115e81dce01a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::initialize_plugins</definition>
        <argsstring>(const boost::program_options::variables_map &amp;options)</argsstring>
        <name>initialize_plugins</name>
        <param>
          <type>const boost::program_options::variables_map &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="64" column="1" bodyfile="libraries/app/application.cpp" bodystart="1022" bodyend="1037"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a3c57913f43e1c924e0ec55591230a29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::startup</definition>
        <argsstring>()</argsstring>
        <name>startup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="66" column="1" bodyfile="libraries/app/application.cpp" bodystart="928" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a7d94637ab56e4a37e277098e6064fa31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="68" column="1" bodyfile="libraries/app/application.cpp" bodystart="994" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a191c11ceeb9370d529a114d818f55b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::startup_plugins</definition>
        <argsstring>()</argsstring>
        <name>startup_plugins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="70" column="1" bodyfile="libraries/app/application.cpp" bodystart="1039" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1aada297ad95d44f0cc521ffc0acafc7b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::shutdown_plugins</definition>
        <argsstring>()</argsstring>
        <name>shutdown_plugins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="72" column="1" bodyfile="libraries/app/application.cpp" bodystart="987" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a4e91788869f6651f25314fff4cd6154b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PluginType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; PluginType &gt;</type>
        <definition>std::shared_ptr&lt;PluginType&gt; steemit::app::application::register_plugin</definition>
        <argsstring>()</argsstring>
        <name>register_plugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="75" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a585c9a19e4c82aefd4d0419c8fc79849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::register_abstract_plugin</definition>
        <argsstring>(std::shared_ptr&lt; abstract_plugin &gt; plug)</argsstring>
        <name>register_abstract_plugin</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsteemit_1_1app_1_1abstract__plugin" kindref="compound">abstract_plugin</ref> &gt;</type>
          <declname>plug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="81" column="1" bodyfile="libraries/app/application.cpp" bodystart="998" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a2393dc839e3ed526cb48d522b9d11478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::enable_plugin</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>enable_plugin</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="83" column="1" bodyfile="libraries/app/application.cpp" bodystart="1013" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a1da5a8befb15550f4e2a81c4f35575a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsteemit_1_1app_1_1abstract__plugin" kindref="compound">abstract_plugin</ref> &gt;</type>
        <definition>std::shared_ptr&lt; abstract_plugin &gt; steemit::app::application::get_plugin</definition>
        <argsstring>(const string &amp;name) const</argsstring>
        <name>get_plugin</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="85" column="1" bodyfile="libraries/app/application.cpp" bodystart="940" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a7d88e6bf99966878e483ea5e6203fc66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PluginType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; PluginType &gt;</type>
        <definition>std::shared_ptr&lt;PluginType&gt; steemit::app::application::get_plugin</definition>
        <argsstring>(const string &amp;name) const</argsstring>
        <name>get_plugin</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="88" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1acc41e87bd4153cd584fd04ff67e37c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>graphene::net::node_ptr</type>
        <definition>graphene::net::node_ptr steemit::app::application::p2p_node</definition>
        <argsstring>()</argsstring>
        <name>p2p_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="95" column="1" bodyfile="libraries/app/application.cpp" bodystart="950" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a53844f3fea748dbfdd9e939d73ccdd86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsteemit_1_1chain_1_1database" kindref="compound">chain::database</ref> &gt;</type>
        <definition>std::shared_ptr&lt; chain::database &gt; steemit::app::application::chain_database</definition>
        <argsstring>() const</argsstring>
        <name>chain_database</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="97" column="1" bodyfile="libraries/app/application.cpp" bodystart="954" bodyend="956"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1affd34dee00334d74c17c6df042803a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::set_block_production</definition>
        <argsstring>(bool producing_blocks)</argsstring>
        <name>set_block_production</name>
        <param>
          <type>bool</type>
          <declname>producing_blocks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="100" column="1" bodyfile="libraries/app/application.cpp" bodystart="963" bodyend="965"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a0633e1c5e906772f4e1762b18e7103da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>fc::optional&lt; <ref refid="structsteemit_1_1app_1_1api__access__info" kindref="compound">api_access_info</ref> &gt;</type>
        <definition>optional&lt; api_access_info &gt; steemit::app::application::get_api_access_info</definition>
        <argsstring>(const string &amp;username) const</argsstring>
        <name>get_api_access_info</name>
        <param>
          <type>const string &amp;</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="102" column="1" bodyfile="libraries/app/application.cpp" bodystart="967" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1ace8dff52415ee1b13a8402fcaa9978b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::set_api_access_info</definition>
        <argsstring>(const string &amp;username, api_access_info &amp;&amp;permissions)</argsstring>
        <name>set_api_access_info</name>
        <param>
          <type>const string &amp;</type>
          <declname>username</declname>
        </param>
        <param>
          <type><ref refid="structsteemit_1_1app_1_1api__access__info" kindref="compound">api_access_info</ref> &amp;&amp;</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="104" column="1" bodyfile="libraries/app/application.cpp" bodystart="971" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a9765c77e309c9f2a0469fa7981295690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::register_api_factory</definition>
        <argsstring>(const string &amp;name, std::function&lt; fc::api_ptr(const api_context &amp;)&gt; factory)</argsstring>
        <name>register_api_factory</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::function&lt; fc::api_ptr(const <ref refid="structsteemit_1_1app_1_1api__context" kindref="compound">api_context</ref> &amp;)&gt;</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a way to instantiate the named API with the application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="109" column="1" bodyfile="libraries/app/application.cpp" bodystart="975" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1ad91e67b261f5533f7a3ef265e767a2e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Api</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void steemit::app::application::register_api_factory</definition>
        <argsstring>(const string &amp;name)</argsstring>
        <name>register_api_factory</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to build an API factory from a type which only requires a reference to the application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="115" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="115" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1ae1562706967e6af658970c5d0b65a7a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>fc::api_ptr</type>
        <definition>fc::api_ptr steemit::app::application::create_api_by_name</definition>
        <argsstring>(const api_context &amp;ctx)</argsstring>
        <name>create_api_by_name</name>
        <param>
          <type>const <ref refid="structsteemit_1_1app_1_1api__context" kindref="compound">api_context</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate the named API. Currently this simply calls the previously registered factory method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="131" column="1" bodyfile="libraries/app/application.cpp" bodystart="979" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="classsteemit_1_1app_1_1application_1a91bcf9a4a21b81e48363a0b63d985d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::app::application::get_max_block_age</definition>
        <argsstring>(int32_t &amp;result)</argsstring>
        <name>get_max_block_age</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/steemit/app/application.hpp" line="133" column="1" bodyfile="libraries/app/application.cpp" bodystart="983" bodyend="985"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/app/include/steemit/app/application.hpp" line="53" column="1" bodyfile="libraries/app/include/steemit/app/application.hpp" bodystart="53" bodyend="149"/>
    <listofallmembers>
      <member refid="classsteemit_1_1app_1_1application_1a46aa084bee7a18ff9546369067174212" prot="private" virt="non-virtual"><scope>steemit::app::application</scope><name>_cfg_options</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a6ff575db5494bcb78788a51837483eaf" prot="private" virt="non-virtual"><scope>steemit::app::application</scope><name>_cli_options</name></member>
      <member refid="classsteemit_1_1app_1_1application_1af98a6616fbbd46ae0fefa03dc9968656" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>_client</name></member>
      <member refid="classsteemit_1_1app_1_1application_1ae9feb8b265f6b9b7238ee7ea6a4112a7" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>_read_only</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a751df66dfaed219aebd42bab646f6fb5" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>_remote_login</name></member>
      <member refid="classsteemit_1_1app_1_1application_1afb1540d80a1ed6b5c043f77843342da3" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>_remote_net_api</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a47ae9acb1717db941d9cd9aaed756d41" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>_ws_apic</name></member>
      <member refid="classsteemit_1_1app_1_1application_1aa5c9eac8de025393b677115487b5df9c" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>_ws_ptr</name></member>
      <member refid="classsteemit_1_1app_1_1application_1ab6eda7ccd905d20adf222f95ccd6132c" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>application</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a53844f3fea748dbfdd9e939d73ccdd86" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>chain_database</name></member>
      <member refid="classsteemit_1_1app_1_1application_1ae1562706967e6af658970c5d0b65a7a9" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>create_api_by_name</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a2393dc839e3ed526cb48d522b9d11478" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>enable_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a0633e1c5e906772f4e1762b18e7103da" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>get_api_access_info</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a91bcf9a4a21b81e48363a0b63d985d8e" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>get_max_block_age</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a1da5a8befb15550f4e2a81c4f35575a2" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>get_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a7d88e6bf99966878e483ea5e6203fc66" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>get_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a1b9f0eec92e8d0aaca235555e0c70f9d" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>initialize</name></member>
      <member refid="classsteemit_1_1app_1_1application_1aae00cad21a96a7257f02115e81dce01a" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>initialize_plugins</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a2bbbd6b25c094e1d43b48b340c11e204" prot="private" virt="non-virtual"><scope>steemit::app::application</scope><name>my</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a2df586e5558e2a98a0d3dae5c76b9ce5" prot="private" virt="non-virtual"><scope>steemit::app::application</scope><name>null_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1application_1acc41e87bd4153cd584fd04ff67e37c8f" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>p2p_node</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a585c9a19e4c82aefd4d0419c8fc79849" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>register_abstract_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a9765c77e309c9f2a0469fa7981295690" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>register_api_factory</name></member>
      <member refid="classsteemit_1_1app_1_1application_1ad91e67b261f5533f7a3ef265e767a2e4" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>register_api_factory</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a4e91788869f6651f25314fff4cd6154b" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>register_plugin</name></member>
      <member refid="classsteemit_1_1app_1_1application_1ace8dff52415ee1b13a8402fcaa9978b0" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>set_api_access_info</name></member>
      <member refid="classsteemit_1_1app_1_1application_1affd34dee00334d74c17c6df042803a36" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>set_block_production</name></member>
      <member refid="classsteemit_1_1app_1_1application_1ab2a6138021461046c969abd40bccdd05" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>set_program_options</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a7d94637ab56e4a37e277098e6064fa31" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>shutdown</name></member>
      <member refid="classsteemit_1_1app_1_1application_1aada297ad95d44f0cc521ffc0acafc7b4" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>shutdown_plugins</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a3c57913f43e1c924e0ec55591230a29d" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>startup</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a191c11ceeb9370d529a114d818f55b4f" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>startup_plugins</name></member>
      <member refid="classsteemit_1_1app_1_1application_1a1534af007972a6d4de027d0164f86288" prot="public" virt="non-virtual"><scope>steemit::app::application</scope><name>~application</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
