<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process" kind="struct" language="C++" prot="public">
    <compoundname>steemit::blockchain_statistics::detail::operation_process</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a8be248b2bbbfe5bb5279e7f7ab11c137" prot="public" static="no">
        <type>void</type>
        <definition>typedef void steemit::blockchain_statistics::detail::operation_process::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="50" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a1d5d931994bb22407b3a1bda341ae1a0" prot="public" static="no" mutable="no">
        <type>const <ref refid="d8/df7/classsteemit_1_1blockchain__statistics_1_1blockchain__statistics__plugin" kindref="compound">blockchain_statistics_plugin</ref> &amp;</type>
        <definition>const blockchain_statistics_plugin&amp; steemit::blockchain_statistics::detail::operation_process::_plugin</definition>
        <argsstring></argsstring>
        <name>_plugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="42" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a33c50e788007a3065dede0a2b54ac311" prot="public" static="no" mutable="no">
        <type>const <ref refid="d4/d89/structsteemit_1_1blockchain__statistics_1_1bucket__object" kindref="compound">bucket_object</ref> &amp;</type>
        <definition>const bucket_object&amp; steemit::blockchain_statistics::detail::operation_process::_bucket</definition>
        <argsstring></argsstring>
        <name>_bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="43" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ab06802e1686fda3bb342f49490533a99" prot="public" static="no" mutable="no">
        <type><ref refid="da/d98/classsteemit_1_1chain_1_1database" kindref="compound">chain::database</ref> &amp;</type>
        <definition>chain::database&amp; steemit::blockchain_statistics::detail::operation_process::_db</definition>
        <argsstring></argsstring>
        <name>_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="44" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a0683ccaa9b1fdce26f3f1ebac386d075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>steemit::blockchain_statistics::detail::operation_process::operation_process</definition>
        <argsstring>(blockchain_statistics_plugin &amp;bsp, const bucket_object &amp;b)</argsstring>
        <name>operation_process</name>
        <param>
          <type><ref refid="d8/df7/classsteemit_1_1blockchain__statistics_1_1blockchain__statistics__plugin" kindref="compound">blockchain_statistics_plugin</ref> &amp;</type>
          <declname>bsp</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d89/structsteemit_1_1blockchain__statistics_1_1bucket__object" kindref="compound">bucket_object</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="46" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a8bf22df5d2986241a2da0bea1b1bcb38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const T &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const T &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="53" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a310d7f082bfae9c5db776dde6f8e339e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const transfer_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const transfer_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="56" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a356bf8aa38a4d7c3173a9e1c61b54644" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const interest_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const interest_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="68" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ac41afd564b3eb274c8b32b8496ce93d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const account_create_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const account_create_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="74" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a438effef1779a5ee4503c829e0a3acb0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const pow_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const pow_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="80" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="80" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1acc8e29d50e25540fe2fe8ba537d449f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const comment_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const comment_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="109" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="109" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a25a7e8b49adba528845ff5260d4ed71a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const vote_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const vote_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="129" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="129" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a913541957f39f6bb7259e43350c4aa00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const author_reward_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const author_reward_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="152" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="152" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a94ee19916bb2bf0e75482f2237673439" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const curation_reward_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const curation_reward_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="160" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a08a118b9bc5f86876faf49f0bbbe6645" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const liquidity_reward_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const liquidity_reward_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="166" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ad38c78c8c34d2d08d764c695c7fa634a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const transfer_to_vesting_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const transfer_to_vesting_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="172" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="172" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a29fcb2eec77a759ec70f33560e438feb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const fill_vesting_withdraw_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const fill_vesting_withdraw_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="179" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="179" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ae5fec7c14fb8bba79f60e71839ad0fb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const limit_order_create_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const limit_order_create_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="196" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a51bd7fa91ce2738f9cdaf4bb5396e73d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const fill_order_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const fill_order_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="202" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="202" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ad7fb703450604fd35bbe8e7fa98e1cb0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const limit_order_cancel_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const limit_order_cancel_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="208" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="208" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ad0e52edfccdc13d90550688146c2be23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const convert_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const convert_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="214" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="214" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a9ce70709629abd045c7d099721bfdd3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::blockchain_statistics::detail::operation_process::operator()</definition>
        <argsstring>(const fill_convert_request_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const fill_convert_request_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="221" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="221" bodyend="226"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="808">
        <label>time_point_sec</label>
      </node>
      <node id="806">
        <label>chainbase::object&lt; bucket_object_type, bucket_object &gt;</label>
      </node>
      <node id="803">
        <label>steemit::chain::database</label>
        <link refid="da/d98/classsteemit_1_1chain_1_1database"/>
        <childnode refid="804" relation="public-inheritance">
        </childnode>
      </node>
      <node id="804">
        <label>chainbase::database</label>
      </node>
      <node id="802">
        <label>steemit::app::abstract_plugin</label>
        <link refid="dc/d57/classsteemit_1_1app_1_1abstract__plugin"/>
      </node>
      <node id="799">
        <label>steemit::blockchain_statistics::detail::operation_process</label>
        <link refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process"/>
        <childnode refid="800" relation="usage">
          <edgelabel>_plugin</edgelabel>
        </childnode>
        <childnode refid="803" relation="usage">
          <edgelabel>_db</edgelabel>
        </childnode>
        <childnode refid="805" relation="usage">
          <edgelabel>_bucket</edgelabel>
        </childnode>
      </node>
      <node id="805">
        <label>steemit::blockchain_statistics::bucket_object</label>
        <link refid="d4/d89/structsteemit_1_1blockchain__statistics_1_1bucket__object"/>
        <childnode refid="806" relation="public-inheritance">
        </childnode>
        <childnode refid="807" relation="usage">
          <edgelabel>steem_vested</edgelabel>
          <edgelabel>sbd_to_be_converted</edgelabel>
          <edgelabel>vests_paid_to_authors</edgelabel>
          <edgelabel>vesting_withdraw_rate_delta</edgelabel>
          <edgelabel>steem_transferred</edgelabel>
          <edgelabel>vests_transferred</edgelabel>
          <edgelabel>steem_converted</edgelabel>
          <edgelabel>sbd_paid_as_interest</edgelabel>
          <edgelabel>vests_withdrawn</edgelabel>
          <edgelabel>liquidity_rewards_paid</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="808" relation="usage">
          <edgelabel>open</edgelabel>
        </childnode>
        <childnode refid="809" relation="usage">
          <edgelabel>estimated_hashpower</edgelabel>
        </childnode>
      </node>
      <node id="801">
        <label>steemit::app::plugin</label>
        <link refid="d8/daa/classsteemit_1_1app_1_1plugin"/>
        <childnode refid="802" relation="public-inheritance">
        </childnode>
      </node>
      <node id="807">
        <label>share_type</label>
      </node>
      <node id="809">
        <label>uint128_t</label>
      </node>
      <node id="800">
        <label>steemit::blockchain_statistics::blockchain_statistics_plugin</label>
        <link refid="d8/df7/classsteemit_1_1blockchain__statistics_1_1blockchain__statistics__plugin"/>
        <childnode refid="801" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" line="41" column="1" bodyfile="libraries/plugins/blockchain_statistics/blockchain_statistics_plugin.cpp" bodystart="41" bodyend="227"/>
    <listofallmembers>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a33c50e788007a3065dede0a2b54ac311" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>_bucket</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ab06802e1686fda3bb342f49490533a99" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>_db</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a1d5d931994bb22407b3a1bda341ae1a0" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>_plugin</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a0683ccaa9b1fdce26f3f1ebac386d075" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operation_process</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a8bf22df5d2986241a2da0bea1b1bcb38" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a310d7f082bfae9c5db776dde6f8e339e" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a356bf8aa38a4d7c3173a9e1c61b54644" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ac41afd564b3eb274c8b32b8496ce93d9" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a438effef1779a5ee4503c829e0a3acb0" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1acc8e29d50e25540fe2fe8ba537d449f4" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a25a7e8b49adba528845ff5260d4ed71a" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a913541957f39f6bb7259e43350c4aa00" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a94ee19916bb2bf0e75482f2237673439" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a08a118b9bc5f86876faf49f0bbbe6645" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ad38c78c8c34d2d08d764c695c7fa634a" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a29fcb2eec77a759ec70f33560e438feb" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ae5fec7c14fb8bba79f60e71839ad0fb4" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a51bd7fa91ce2738f9cdaf4bb5396e73d" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ad7fb703450604fd35bbe8e7fa98e1cb0" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1ad0e52edfccdc13d90550688146c2be23" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a9ce70709629abd045c7d099721bfdd3d" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>operator()</name></member>
      <member refid="d1/d51/structsteemit_1_1blockchain__statistics_1_1detail_1_1operation__process_1a8be248b2bbbfe5bb5279e7f7ab11c137" prot="public" virt="non-virtual"><scope>steemit::blockchain_statistics::detail::operation_process</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
