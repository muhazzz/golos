<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object" kind="class" language="C++" prot="public">
    <compoundname>steemit::tags::author_tag_stats_object</compoundname>
    <basecompoundref prot="public" virt="non-virtual">chainbase::object&lt; author_tag_stats_object_type, author_tag_stats_object &gt;</basecompoundref>
    <includes refid="d1/dec/tags__plugin_8hpp" local="no">tags_plugin.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a99dfd480323682e88d4ab1969418a566" prot="public" static="no" mutable="no">
        <type>id_type</type>
        <definition>id_type steemit::tags::author_tag_stats_object::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="510" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a519c3b12b6fb0846cc48ac5ff9cf6ca4" prot="public" static="no" mutable="no">
        <type><ref refid="d8/d9b/namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref></type>
        <definition>account_id_type steemit::tags::author_tag_stats_object::author</definition>
        <argsstring></argsstring>
        <name>author</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="511" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1abf126be07025e881abc4c184dce6eda0" prot="public" static="no" mutable="no">
        <type><ref refid="d8/d58/namespacesteemit_1_1tags_1a7ee1c11245b697eca23b79aff8487d0b" kindref="member">tag_name_type</ref></type>
        <definition>tag_name_type steemit::tags::author_tag_stats_object::tag</definition>
        <argsstring></argsstring>
        <name>tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="512" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a9c03e305d0e0848206b6c8b46d870a09" prot="public" static="no" mutable="no">
        <type>asset</type>
        <definition>asset steemit::tags::author_tag_stats_object::total_rewards</definition>
        <argsstring></argsstring>
        <name>total_rewards</name>
        <initializer>= asset(0, SBD_SYMBOL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="513" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1abcfe7681bb9df29813e060b88b1ea341" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t steemit::tags::author_tag_stats_object::total_posts</definition>
        <argsstring></argsstring>
        <name>total_posts</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="514" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="514" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a4a3704b35b92e20caca04b7709456867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Constructor</type>
          </param>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>steemit::tags::author_tag_stats_object::author_tag_stats_object</definition>
        <argsstring>(Constructor &amp;&amp;c, allocator&lt; Allocator &gt;)</argsstring>
        <name>author_tag_stats_object</name>
        <param>
          <type>Constructor &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>allocator&lt; Allocator &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="506" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="506" bodyend="508"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This purpose of this object is to maintain stats about which tags an author uses, how frequnetly, and how many total earnings of all posts by author in tag. It also allows us to answer the question of which authors earn the most in each tag category. This helps users to discover the best bloggers to follow for particular tags. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="196">
        <label>chainbase::object&lt; author_tag_stats_object_type, author_tag_stats_object &gt;</label>
      </node>
      <node id="195">
        <label>steemit::tags::author_tag_stats_object</label>
        <link refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object"/>
        <childnode refid="196" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="200">
        <label>asset</label>
      </node>
      <node id="199">
        <label>oid&lt; account_object &gt;</label>
      </node>
      <node id="198">
        <label>chainbase::object&lt; author_tag_stats_object_type, author_tag_stats_object &gt;</label>
      </node>
      <node id="197">
        <label>steemit::tags::author_tag_stats_object</label>
        <link refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object"/>
        <childnode refid="198" relation="public-inheritance">
        </childnode>
        <childnode refid="199" relation="usage">
          <edgelabel>author</edgelabel>
        </childnode>
        <childnode refid="200" relation="usage">
          <edgelabel>total_rewards</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" line="503" column="1" bodyfile="libraries/plugins/tags/include/steemit/tags/tags_plugin.hpp" bodystart="502" bodyend="515"/>
    <listofallmembers>
      <member refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a519c3b12b6fb0846cc48ac5ff9cf6ca4" prot="public" virt="non-virtual"><scope>steemit::tags::author_tag_stats_object</scope><name>author</name></member>
      <member refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a4a3704b35b92e20caca04b7709456867" prot="public" virt="non-virtual"><scope>steemit::tags::author_tag_stats_object</scope><name>author_tag_stats_object</name></member>
      <member refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a99dfd480323682e88d4ab1969418a566" prot="public" virt="non-virtual"><scope>steemit::tags::author_tag_stats_object</scope><name>id</name></member>
      <member refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1abf126be07025e881abc4c184dce6eda0" prot="public" virt="non-virtual"><scope>steemit::tags::author_tag_stats_object</scope><name>tag</name></member>
      <member refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1abcfe7681bb9df29813e060b88b1ea341" prot="public" virt="non-virtual"><scope>steemit::tags::author_tag_stats_object</scope><name>total_posts</name></member>
      <member refid="de/d33/classsteemit_1_1tags_1_1author__tag__stats__object_1a9c03e305d0e0848206b6c8b46d870a09" prot="public" virt="non-virtual"><scope>steemit::tags::author_tag_stats_object</scope><name>total_rewards</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
