<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d0/d35/namespacefc_1_1raw" kind="namespace" language="C++">
    <compoundname>fc::raw</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d35/namespacefc_1_1raw_1a5681030905724a071f161f39b50eaced" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const chainbase::oid&lt; T &gt; &amp;id)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const chainbase::oid&lt; T &gt; &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="194" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="d0/d35/namespacefc_1_1raw_1a2842d72c3c2faa1ffc1de3e6eded06c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, chainbase::oid&lt; T &gt; &amp;id)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>chainbase::oid&lt; T &gt; &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="199" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="d0/d35/namespacefc_1_1raw_1a2c3c2b3c7716a5fdff1c7599c5499b9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(steemit::chain::buffer_type &amp;raw, const T &amp;v)</argsstring>
        <name>pack</name>
        <param>
          <type><ref refid="d8/d9b/namespacesteemit_1_1chain_1a0ac17e44e1f49cfe6b3d2b0aee69a116" kindref="member">steemit::chain::buffer_type</ref> &amp;</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="209" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="d0/d35/namespacefc_1_1raw_1abaa296f42740c71433a015a8427174fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(const steemit::chain::buffer_type &amp;raw, T &amp;v)</argsstring>
        <name>unpack</name>
        <param>
          <type>const <ref refid="d8/d9b/namespacesteemit_1_1chain_1a0ac17e44e1f49cfe6b3d2b0aee69a116" kindref="member">steemit::chain::buffer_type</ref> &amp;</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="217" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="d0/d35/namespacefc_1_1raw_1a597f0cff6650c1f6d432bac0d0592681" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T fc::raw::unpack</definition>
        <argsstring>(const steemit::chain::buffer_type &amp;raw)</argsstring>
        <name>unpack</name>
        <param>
          <type>const <ref refid="d8/d9b/namespacesteemit_1_1chain_1a0ac17e44e1f49cfe6b3d2b0aee69a116" kindref="member">steemit::chain::buffer_type</ref> &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="223" column="1" bodyfile="libraries/chain/include/steemit/chain/steem_object_types.hpp" bodystart="223" bodyend="228"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/include/steemit/chain/steem_object_types.hpp" line="192" column="1"/>
  </compounddef>
</doxygen>
