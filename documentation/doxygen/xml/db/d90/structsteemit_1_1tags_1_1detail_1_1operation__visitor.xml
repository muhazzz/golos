<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor" kind="struct" language="C++" prot="public">
    <compoundname>steemit::tags::detail::operation_visitor</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a5f622de393e6de478afcc9adf9560203" prot="public" static="no">
        <type>void</type>
        <definition>typedef void steemit::tags::detail::operation_visitor::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="53" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a55a6158815b10a6ed2d018a4b844adb0" prot="public" static="no" mutable="no">
        <type><ref refid="da/d98/classsteemit_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
        <definition>database&amp; steemit::tags::detail::operation_visitor::_db</definition>
        <argsstring></argsstring>
        <name>_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="55" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1adb5d99a05fb7988e8e0d3186aabd6196" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>steemit::tags::detail::operation_visitor::operation_visitor</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>operation_visitor</name>
        <param>
          <type><ref refid="da/d98/classsteemit_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="51" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="51" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a25d76d98e1474217e6a9852acb60e834" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::remove_stats</definition>
        <argsstring>(const tag_object &amp;tag, const tag_stats_object &amp;stats) const</argsstring>
        <name>remove_stats</name>
        <param>
          <type>const <ref refid="d9/dc8/classsteemit_1_1tags_1_1tag__object" kindref="compound">tag_object</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d0c/classsteemit_1_1tags_1_1tag__stats__object" kindref="compound">tag_stats_object</ref> &amp;</type>
          <declname>stats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="57" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a3eb779c4180e1e56d24a9f82ed1ca858" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::add_stats</definition>
        <argsstring>(const tag_object &amp;tag, const tag_stats_object &amp;stats) const</argsstring>
        <name>add_stats</name>
        <param>
          <type>const <ref refid="d9/dc8/classsteemit_1_1tags_1_1tag__object" kindref="compound">tag_object</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d0c/classsteemit_1_1tags_1_1tag__stats__object" kindref="compound">tag_stats_object</ref> &amp;</type>
          <declname>stats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="69" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="69" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1aedf680065630997a212f140da6ecde83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::remove_tag</definition>
        <argsstring>(const tag_object &amp;tag) const</argsstring>
        <name>remove_tag</name>
        <param>
          <type>const <ref refid="d9/dc8/classsteemit_1_1tags_1_1tag__object" kindref="compound">tag_object</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TODO: update tag stats object </para>        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="81" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1adad3d10f45884917d78b1aaa3ddd11a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d9/d0c/classsteemit_1_1tags_1_1tag__stats__object" kindref="compound">tag_stats_object</ref> &amp;</type>
        <definition>const tag_stats_object&amp; steemit::tags::detail::operation_visitor::get_stats</definition>
        <argsstring>(const string &amp;tag) const</argsstring>
        <name>get_stats</name>
        <param>
          <type>const string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="95" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a2b35f9cf956db269b3b2394f516c6bf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d8a/structsteemit_1_1tags_1_1comment__metadata" kindref="compound">comment_metadata</ref></type>
        <definition>comment_metadata steemit::tags::detail::operation_visitor::filter_tags</definition>
        <argsstring>(const comment_object &amp;c) const</argsstring>
        <name>filter_tags</name>
        <param>
          <type>const <ref refid="db/d00/classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>the universal tag applies to everything safe for work or nsfw with a non-negative payout</para><para>add it to the universal tag </para>        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="107" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="107" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1af4f9b084ada06d62ea60e4b695ae2a54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::update_tag</definition>
        <argsstring>(const tag_object &amp;current, const comment_object &amp;comment, double hot) const</argsstring>
        <name>update_tag</name>
        <param>
          <type>const <ref refid="d9/dc8/classsteemit_1_1tags_1_1tag__object" kindref="compound">tag_object</ref> &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>const <ref refid="db/d00/classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &amp;</type>
          <declname>comment</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="148" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="148" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1ac6fc7b2a3abeb0373858b698d6fdffa0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::create_tag</definition>
        <argsstring>(const string &amp;tag, const comment_object &amp;comment, double hot) const</argsstring>
        <name>create_tag</name>
        <param>
          <type>const string &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const <ref refid="db/d00/classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &amp;</type>
          <declname>comment</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="172" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="172" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a9fb1e56ec9a2e8bdbd4362e1d6dd76fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double steemit::tags::detail::operation_visitor::calculate_hot</definition>
        <argsstring>(const comment_object &amp;c, const time_point_sec &amp;now) const</argsstring>
        <name>calculate_hot</name>
        <param>
          <type>const <ref refid="db/d00/classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const time_point_sec &amp;</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ulink url="https://medium.com/hacking-and-gonzo/how-reddit-ranking-algorithms-work-ef111e33d0d9#.lcbj6auuw">https://medium.com/hacking-and-gonzo/how-reddit-ranking-algorithms-work-ef111e33d0d9#.lcbj6auuw</ulink> </para>        </detaileddescription>
        <inbodydescription>
<para>new algorithm</para><para>reddit algorithm </para>        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="218" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="218" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1af8c0aba2f36c43b8907503e7100945e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::update_tags</definition>
        <argsstring>(const comment_object &amp;c) const</argsstring>
        <name>update_tags</name>
        <param>
          <type>const <ref refid="db/d00/classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>finds tags that have been added or removed or updated </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="242" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="242" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1ad1e603de3be40a6219dc3244097ff425" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/d3f/classsteemit_1_1tags_1_1peer__stats__object" kindref="compound">peer_stats_object</ref> &amp;</type>
        <definition>const peer_stats_object&amp; steemit::tags::detail::operation_visitor::get_or_create_peer_stats</definition>
        <argsstring>(account_id_type voter, account_id_type peer) const</argsstring>
        <name>get_or_create_peer_stats</name>
        <param>
          <type><ref refid="d8/d9b/namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref></type>
          <declname>voter</declname>
        </param>
        <param>
          <type><ref refid="d8/d9b/namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref></type>
          <declname>peer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="282" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="282" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a9b3834ac7d2f13df4702109dee044299" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::update_indirect_vote</definition>
        <argsstring>(account_id_type a, account_id_type b, int positive) const</argsstring>
        <name>update_indirect_vote</name>
        <param>
          <type><ref refid="d8/d9b/namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="d8/d9b/namespacesteemit_1_1chain_1aa381fbe5f22b4abc90a719e5f59c842f" kindref="member">account_id_type</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>positive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="294" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="294" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a3a2c55be9c306c87e890d6585b32c2fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::update_peer_stats</definition>
        <argsstring>(const account_object &amp;voter, const account_object &amp;author, const comment_object &amp;c, int vote) const</argsstring>
        <name>update_peer_stats</name>
        <param>
          <type>const <ref refid="d1/d66/classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref> &amp;</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d66/classsteemit_1_1chain_1_1account__object" kindref="compound">account_object</ref> &amp;</type>
          <declname>author</declname>
        </param>
        <param>
          <type>const <ref refid="db/d00/classsteemit_1_1chain_1_1comment__object" kindref="compound">comment_object</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>ignore votes for yourself</para><para>only count top level posts </para>        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="312" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="312" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1aa76c03f892c5f2222f6de310ab9744b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::operator()</definition>
        <argsstring>(const comment_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const comment_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="335" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="335" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1aa86401b35873e9a53569272a97296a91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::operator()</definition>
        <argsstring>(const transfer_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const transfer_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="339" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="339" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a69276f5500fe715c07d410fb6dec782b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::operator()</definition>
        <argsstring>(const vote_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const vote_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="370" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="370" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a0051476079caad10d2e3dac7079739de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::operator()</definition>
        <argsstring>(const delete_comment_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const delete_comment_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="380" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="380" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a4f086803947d436e59186abc296c91ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::operator()</definition>
        <argsstring>(const comment_reward_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const comment_reward_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="395" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="395" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a629882c412ab06877d3bb236426913da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::operator()</definition>
        <argsstring>(const comment_payout_update_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const comment_payout_update_operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="408" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a6cf6b677a541447b37ab47528a0bfb9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void steemit::tags::detail::operation_visitor::operator()</definition>
        <argsstring>(Op &amp;&amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Op &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/tags/tags_plugin.cpp" line="414" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="414" bodyend="415"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="827">
        <label>steemit::chain::database</label>
        <link refid="da/d98/classsteemit_1_1chain_1_1database"/>
        <childnode refid="828" relation="public-inheritance">
        </childnode>
      </node>
      <node id="826">
        <label>steemit::tags::detail::operation_visitor</label>
        <link refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor"/>
        <childnode refid="827" relation="usage">
          <edgelabel>_db</edgelabel>
        </childnode>
      </node>
      <node id="828">
        <label>chainbase::database</label>
      </node>
    </collaborationgraph>
    <location file="libraries/plugins/tags/tags_plugin.cpp" line="50" column="1" bodyfile="libraries/plugins/tags/tags_plugin.cpp" bodystart="50" bodyend="416"/>
    <listofallmembers>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a55a6158815b10a6ed2d018a4b844adb0" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>_db</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a3eb779c4180e1e56d24a9f82ed1ca858" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>add_stats</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a9fb1e56ec9a2e8bdbd4362e1d6dd76fc" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>calculate_hot</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1ac6fc7b2a3abeb0373858b698d6fdffa0" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>create_tag</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a2b35f9cf956db269b3b2394f516c6bf7" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>filter_tags</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1ad1e603de3be40a6219dc3244097ff425" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>get_or_create_peer_stats</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1adad3d10f45884917d78b1aaa3ddd11a3" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>get_stats</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1adb5d99a05fb7988e8e0d3186aabd6196" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operation_visitor</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1aa76c03f892c5f2222f6de310ab9744b3" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operator()</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1aa86401b35873e9a53569272a97296a91" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operator()</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a69276f5500fe715c07d410fb6dec782b" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operator()</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a0051476079caad10d2e3dac7079739de" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operator()</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a4f086803947d436e59186abc296c91ed" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operator()</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a629882c412ab06877d3bb236426913da" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operator()</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a6cf6b677a541447b37ab47528a0bfb9d" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>operator()</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a25d76d98e1474217e6a9852acb60e834" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>remove_stats</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1aedf680065630997a212f140da6ecde83" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>remove_tag</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a5f622de393e6de478afcc9adf9560203" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>result_type</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a9b3834ac7d2f13df4702109dee044299" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>update_indirect_vote</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1a3a2c55be9c306c87e890d6585b32c2fa" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>update_peer_stats</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1af4f9b084ada06d62ea60e4b695ae2a54" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>update_tag</name></member>
      <member refid="db/d90/structsteemit_1_1tags_1_1detail_1_1operation__visitor_1af8c0aba2f36c43b8907503e7100945e8" prot="public" virt="non-virtual"><scope>steemit::tags::detail::operation_visitor</scope><name>update_tags</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
