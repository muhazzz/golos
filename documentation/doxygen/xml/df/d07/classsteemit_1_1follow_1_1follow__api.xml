<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="df/d07/classsteemit_1_1follow_1_1follow__api" kind="class" language="C++" prot="public">
    <compoundname>steemit::follow::follow_api</compoundname>
    <includes refid="da/dcd/follow__api_8hpp" local="no">follow_api.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a1c8c21b9f28c53ef767e13e85fee39a2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="df/d9f/classsteemit_1_1follow_1_1detail_1_1follow__api__impl" kindref="compound">detail::follow_api_impl</ref> &gt;</type>
        <definition>std::shared_ptr&lt;detail::follow_api_impl&gt; steemit::follow::follow_api::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="110" column="1" bodyfile="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a93df5ee198ec419d05649564b013f403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>steemit::follow::follow_api::follow_api</definition>
        <argsstring>(const app::api_context &amp;ctx)</argsstring>
        <name>follow_api</name>
        <param>
          <type>const <ref refid="d1/d23/structsteemit_1_1app_1_1api__context" kindref="compound">app::api_context</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="79" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1aacbdac8bf51f0b35330bce71b0ea7dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void steemit::follow::follow_api::on_api_startup</definition>
        <argsstring>()</argsstring>
        <name>on_api_startup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="81" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="275" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a863e9e8981fcd10b733e8d094b5061f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="d1/d9d/structsteemit_1_1follow_1_1follow__api__obj" kindref="compound">follow_api_obj</ref> &gt;</type>
        <definition>vector&lt; follow_api_obj &gt; steemit::follow::follow_api::get_followers</definition>
        <argsstring>(string to, string start, follow_type type, uint16_t limit) const</argsstring>
        <name>get_followers</name>
        <param>
          <type>string</type>
          <declname>to</declname>
        </param>
        <param>
          <type>string</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="d0/d38/namespacesteemit_1_1follow_1aacb5f04391918d7b1d97155bebd0c3c4" kindref="member">follow_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="83" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="278" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1aeea8dc49cd723072ae3e9a2f2912e67a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="d1/d9d/structsteemit_1_1follow_1_1follow__api__obj" kindref="compound">follow_api_obj</ref> &gt;</type>
        <definition>vector&lt; follow_api_obj &gt; steemit::follow::follow_api::get_following</definition>
        <argsstring>(string from, string start, follow_type type, uint16_t limit) const</argsstring>
        <name>get_following</name>
        <param>
          <type>string</type>
          <declname>from</declname>
        </param>
        <param>
          <type>string</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="d0/d38/namespacesteemit_1_1follow_1aacb5f04391918d7b1d97155bebd0c3c4" kindref="member">follow_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="85" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="284" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a5894d2ab5292db2794c6dc7c0535101b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d02/structsteemit_1_1follow_1_1follow__count__api__obj" kindref="compound">follow_count_api_obj</ref></type>
        <definition>follow_count_api_obj steemit::follow::follow_api::get_follow_count</definition>
        <argsstring>(string account) const</argsstring>
        <name>get_follow_count</name>
        <param>
          <type>string</type>
          <declname>account</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="87" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="290" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1abae63180b4d82f77e23197a51d3e065b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="db/d79/structsteemit_1_1follow_1_1feed__entry" kindref="compound">feed_entry</ref> &gt;</type>
        <definition>vector&lt; feed_entry &gt; steemit::follow::follow_api::get_feed_entries</definition>
        <argsstring>(string account, uint32_t entry_id=0, uint16_t limit=500) const</argsstring>
        <name>get_feed_entries</name>
        <param>
          <type>string</type>
          <declname>account</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>entry_id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>limit</declname>
          <defval>500</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="89" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="296" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1ac8dd06357092341900ede2400fae3e2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="de/dea/structsteemit_1_1follow_1_1comment__feed__entry" kindref="compound">comment_feed_entry</ref> &gt;</type>
        <definition>vector&lt; comment_feed_entry &gt; steemit::follow::follow_api::get_feed</definition>
        <argsstring>(string account, uint32_t entry_id=0, uint16_t limit=500) const</argsstring>
        <name>get_feed</name>
        <param>
          <type>string</type>
          <declname>account</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>entry_id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>limit</declname>
          <defval>500</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="91" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="302" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1aa3ea2627175732a51a66acdd5be9affa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="dc/df0/structsteemit_1_1follow_1_1blog__entry" kindref="compound">blog_entry</ref> &gt;</type>
        <definition>vector&lt; blog_entry &gt; steemit::follow::follow_api::get_blog_entries</definition>
        <argsstring>(string account, uint32_t entry_id=0, uint16_t limit=500) const</argsstring>
        <name>get_blog_entries</name>
        <param>
          <type>string</type>
          <declname>account</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>entry_id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>limit</declname>
          <defval>500</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="93" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="308" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a6967b4c2e890541d204ace13db90c712" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="de/de4/structsteemit_1_1follow_1_1comment__blog__entry" kindref="compound">comment_blog_entry</ref> &gt;</type>
        <definition>vector&lt; comment_blog_entry &gt; steemit::follow::follow_api::get_blog</definition>
        <argsstring>(string account, uint32_t entry_id=0, uint16_t limit=500) const</argsstring>
        <name>get_blog</name>
        <param>
          <type>string</type>
          <declname>account</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>entry_id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>limit</declname>
          <defval>500</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="95" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="314" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a11043a6274eb7fa0ebaee0508df79386" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="dc/da6/structsteemit_1_1follow_1_1account__reputation" kindref="compound">account_reputation</ref> &gt;</type>
        <definition>vector&lt; account_reputation &gt; steemit::follow::follow_api::get_account_reputations</definition>
        <argsstring>(string lower_bound_name, uint32_t limit=1000) const</argsstring>
        <name>get_account_reputations</name>
        <param>
          <type>string</type>
          <declname>lower_bound_name</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>limit</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="97" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="320" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a10085884a9d019ee02fd78dfbc7e95b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; account_name_type &gt;</type>
        <definition>vector&lt; account_name_type &gt; steemit::follow::follow_api::get_reblogged_by</definition>
        <argsstring>(const string &amp;author, const string &amp;permlink) const</argsstring>
        <name>get_reblogged_by</name>
        <param>
          <type>const string &amp;</type>
          <declname>author</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>permlink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets list of accounts that have reblogged a particular post </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="102" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="326" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="df/d07/classsteemit_1_1follow_1_1follow__api_1a1a8ae64a02e7361e17462c80a905f6cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; pair&lt; account_name_type, uint32_t &gt; &gt;</type>
        <definition>vector&lt; pair&lt; account_name_type, uint32_t &gt; &gt; steemit::follow::follow_api::get_blog_authors</definition>
        <argsstring>(const account_name_type &amp;blog_account) const</argsstring>
        <name>get_blog_authors</name>
        <param>
          <type>const account_name_type &amp;</type>
          <declname>blog_account</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a list of authors that have had their content reblogged on a given blog account </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="107" column="1" bodyfile="libraries/plugins/follow/follow_api.cpp" bodystart="342" bodyend="355"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" line="77" column="1" bodyfile="libraries/plugins/follow/include/steemit/follow/follow_api.hpp" bodystart="77" bodyend="111"/>
    <listofallmembers>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a93df5ee198ec419d05649564b013f403" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>follow_api</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a11043a6274eb7fa0ebaee0508df79386" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_account_reputations</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a6967b4c2e890541d204ace13db90c712" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_blog</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a1a8ae64a02e7361e17462c80a905f6cb" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_blog_authors</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1aa3ea2627175732a51a66acdd5be9affa" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_blog_entries</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1ac8dd06357092341900ede2400fae3e2a" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_feed</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1abae63180b4d82f77e23197a51d3e065b" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_feed_entries</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a5894d2ab5292db2794c6dc7c0535101b" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_follow_count</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a863e9e8981fcd10b733e8d094b5061f7" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_followers</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1aeea8dc49cd723072ae3e9a2f2912e67a" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_following</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a10085884a9d019ee02fd78dfbc7e95b6" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>get_reblogged_by</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1a1c8c21b9f28c53ef767e13e85fee39a2" prot="private" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>my</name></member>
      <member refid="df/d07/classsteemit_1_1follow_1_1follow__api_1aacbdac8bf51f0b35330bce71b0ea7dba" prot="public" virt="non-virtual"><scope>steemit::follow::follow_api</scope><name>on_api_startup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
